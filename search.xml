<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Android_settings.db_添加新字段]]></title>
      <url>http://yoursite.com/2016/10/10/Android-settings-db-%E6%B7%BB%E5%8A%A0%E6%96%B0%E5%AD%97%E6%AE%B5/</url>
      <content type="html"><![CDATA[<p><code>Settings</code> 对于 Android 系统工程师来说，是一个经常需要改动的部分之一。这两天都是看 Settings 的源码，就我个人而言，Settings 整个项目的代码量还是挺多的。你觉得呢？</p>
<a id="more"></a>
<p>那如何给 Android 的 <code>settings.db</code> 数据库添加新的字段？接下来，我就说说我是怎么做的。如有不妥之处，欢迎留言，谢谢~</p>
<hr>
<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>今天遇到这样一个需求：在 Android 的 settings.db 中添加一个新字段，用于保存一个特殊含义的值。这里假设是需要保存 wifi mac address。</p>
<hr>
<h1 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h1><p>Settings 的数据都是保存在Android系统中的 <code>data/data/com.android.providers.settings/databases/settings.db</code> 数据库中(可以通过 <code>DDMS</code> 或使用命令查看，当然前提是有 <strong>root 权限</strong>)，而这些数据的默认值则是在 Android 源码中 <code>frameworks/base/packages/SettingsProvider/res/values/defaults.xml</code> 文件中定义的。</p>
<hr>
<h1 id="如何添加新字段"><a href="#如何添加新字段" class="headerlink" title="如何添加新字段"></a>如何添加新字段</h1><p>如果需要在 settings.db 中添加新的字段，可以通过以下步骤进行实现[这里假设需要添加保存 wifi mac address 的字段]：</p>
<h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>在 <code>defaults.xml</code> 中为新字段的数据定义一个默认值(也可以通过代码进行设置)</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"def_save_wifi_mac"</span>&gt;</span>00:00:00:00:00:00<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"></div><div class="line">Tips：(需要与第二步中的类型对应)</div><div class="line">字符串类型：string，例如：`<span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"def_save_wifi_mac"</span>&gt;</span>00:00:00:00:00:00<span class="tag">&lt;/<span class="name">string</span>&gt;</span>`</div><div class="line">布尔类型：bool，例如源码中：`<span class="tag">&lt;<span class="name">bool</span> <span class="attr">name</span>=<span class="string">"def_wifi_on"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">bool</span>&gt;</span>`</div><div class="line">整型：integer，例如源码中：`<span class="tag">&lt;<span class="name">integer</span> <span class="attr">name</span>=<span class="string">"def_wifi_sleep_policy"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">integer</span>&gt;</span>`</div><div class="line">小数：fraction，例如源码中：`<span class="tag">&lt;<span class="name">fraction</span> <span class="attr">name</span>=<span class="string">"def_window_animation_scale"</span>&gt;</span>100%<span class="tag">&lt;/<span class="name">fraction</span>&gt;</span>`</div></pre></td></tr></table></figure>
<h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>仅仅在给默认值是不行的，还需要在 <code>DatabaseHelper.java</code> 中的 <code>loadSystemSettings(SQLiteDatabase db)</code> 方法中添加字段</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 路径：Android 源码中的 </span></div><div class="line"><span class="comment">// frameworks/base/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java</span></div><div class="line"><span class="comment">// loadSystemSettings(SQLiteDatabase db)方法中添加新字段</span></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 第一个参数：SQLiteStatement(默认写stmt)</div><div class="line"> * 第二个参数：新添加字段的名称</div><div class="line"> * 第三个参数：新字段的默认值(即，在第一步中添加的默认值)</div><div class="line"> */</div><div class="line">loadStringSetting(stmt, <span class="string">"wifi_mac_address"</span>, R.string.def_save_wifi_mac);</div><div class="line"></div><div class="line">Tips:(需要与第一步中的类型对应)</div><div class="line">获取字符串类型：loadStringSetting(stmt, 新字段名称, R.string.默认值名称)</div><div class="line">获取布尔类型：loadBooleanSetting(stmt, 新字段名称 ,R.bool.默认值名称)</div><div class="line">获取整型：loadIntegerSetting(stmt, 新字段名称 ,R.integer.默认值名称)</div><div class="line">获取小数：loadFractionSetting(stmt, 新字段名称 ,R.fraction.默认值名称)</div></pre></td></tr></table></figure>
<h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>重新编译一个 SettingsProvider.apk，覆盖安装即可</p>
<h2 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h2><p>经过前面三个步骤，理论上就已经添加完了，那是否成功呢？现在就来检验下，检验有三种方法，</p>
<h3 id="1-借助-DDNS-检验"><a href="#1-借助-DDNS-检验" class="headerlink" title="1.借助 DDNS 检验"></a>1.借助 DDNS 检验</h3><p>settings.db 数据库的路径是：<code>data/data/com.android.providers.settings/settings.db</code> ,然后将数据库导出，进行验证</p>
<h3 id="2-代码检验"><a href="#2-代码检验" class="headerlink" title="2.代码检验"></a>2.代码检验</h3><p>在 APP 中可以通过 <code>Settings.System</code> 中的 get 和 put 方法获取和设置，验证是否有新字段</p>
<img src="/2016/10/10/Android-settings-db-添加新字段/get.png" alt="获取方法" title="获取方法">
<img src="/2016/10/10/Android-settings-db-添加新字段/put.png" alt="设置方法" title="设置方法">
<h3 id="3-adb-shell-命令检验"><a href="#3-adb-shell-命令检验" class="headerlink" title="3.adb shell 命令检验"></a>3.adb shell 命令检验</h3><p>settings.db 数据库的路径是：<code>data/data/com.android.providers.settings/settings.db</code> ,然后通过 sqlite3 进行查看，是否有新字段</p>
<hr>
<p>到此，此篇博文就到尾声了。希望对你有所帮助，若本文有误或你有更好的方法，欢迎留言，谢谢~</p>
<hr>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>邮箱：liuguangmingcn@163.com</strong></p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android 源码的根目录描述]]></title>
      <url>http://yoursite.com/2016/10/05/Android%20%E6%BA%90%E7%A0%81%E7%9A%84%E6%A0%B9%E7%9B%AE%E5%BD%95%E7%AE%80%E8%BF%B0/</url>
      <content type="html"><![CDATA[<p>简单描述 Android 源码的根目录下各文件夹的功能</p>
<a id="more"></a>
<table>
<thead>
<tr>
<th style="text-align:center">根目录名称</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">abi</td>
<td style="text-align:left">abi 相关代码。abi：Application Binary Interface 的简称，是应用程序二进制接口</td>
</tr>
<tr>
<td style="text-align:center">art</td>
<td style="text-align:left">Android 5.0 之后的运行环境。注意和 Dalvik VM 区分</td>
</tr>
<tr>
<td style="text-align:center">bionic</td>
<td style="text-align:left">bionic C 库</td>
</tr>
<tr>
<td style="text-align:center">bootable</td>
<td style="text-align:left">启动引导相关的代码</td>
</tr>
<tr>
<td style="text-align:center">build</td>
<td style="text-align:left">存放系统编译规则及 generic 等 基础开发配置包</td>
</tr>
<tr>
<td style="text-align:center">cts</td>
<td style="text-align:left">Android 兼容性测试套件标准</td>
</tr>
<tr>
<td style="text-align:center">dalvik</td>
<td style="text-align:left">Dalvik VM</td>
</tr>
<tr>
<td style="text-align:center">development</td>
<td style="text-align:left">应用程序开发相关</td>
</tr>
<tr>
<td style="text-align:center">device</td>
<td style="text-align:left">设备相关代码</td>
</tr>
<tr>
<td style="text-align:center">docs</td>
<td style="text-align:left">介绍开源的相关文档</td>
</tr>
<tr>
<td style="text-align:center">external</td>
<td style="text-align:left">Android 使用的一些开源的模组</td>
</tr>
<tr>
<td style="text-align:center">framework</td>
<td style="text-align:left">核心框架 —— Java 及 C++语言，是Android 应用程序的框架</td>
</tr>
<tr>
<td style="text-align:center">gdk</td>
<td style="text-align:left">即时通信模块</td>
</tr>
<tr>
<td style="text-align:center">hardware</td>
<td style="text-align:left">主要是硬件适配层 HAL 代码</td>
</tr>
<tr>
<td style="text-align:center">kernel</td>
<td style="text-align:left">Linux 的内核文件</td>
</tr>
<tr>
<td style="text-align:center">libcore</td>
<td style="text-align:left">核心库相关</td>
</tr>
<tr>
<td style="text-align:center">libnativehelper</td>
<td style="text-align:left">是 Support functions for Android’s class libraries 的缩写，表示动态库，是实现的 JNI 库的基础</td>
</tr>
<tr>
<td style="text-align:center">ndk</td>
<td style="text-align:left">ndk 相关代码</td>
</tr>
<tr>
<td style="text-align:center">out</td>
<td style="text-align:left">编译完成后的代码输出到此目录</td>
</tr>
<tr>
<td style="text-align:center">package</td>
<td style="text-align:left">应用程序包</td>
</tr>
<tr>
<td style="text-align:center">pdk</td>
<td style="text-align:left">Plug Development Kit 的缩写，是本地开发套件</td>
</tr>
<tr>
<td style="text-align:center">prebuilts</td>
<td style="text-align:left">x86 和 arm 架构下预编译的一些资源文件</td>
</tr>
<tr>
<td style="text-align:center">sdk</td>
<td style="text-align:left">SDK 及模拟器</td>
</tr>
<tr>
<td style="text-align:center">system</td>
<td style="text-align:left">文件系统和应用及组件，是用 C 语言实现的</td>
</tr>
<tr>
<td style="text-align:center">tools</td>
<td style="text-align:left">工具文件夹</td>
</tr>
<tr>
<td style="text-align:center">vender</td>
<td style="text-align:left">厂商定制代码</td>
</tr>
<tr>
<td style="text-align:center">Makefile</td>
<td style="text-align:left">全局的 Makefile</td>
</tr>
</tbody>
</table>
<hr>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> </p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android传感器(中)]]></title>
      <url>http://yoursite.com/2016/08/21/Android%E4%BC%A0%E6%84%9F%E5%99%A8(%E4%B8%AD)/</url>
      <content type="html"><![CDATA[<p>在 <a href="http://www.liuguangmingcn.com/2016/08/11/Android%E4%BC%A0%E6%84%9F%E5%99%A8-%E4%B8%8A/" target="_blank" rel="external">Android 传感器(上)</a> 博客中，只是简单介绍了 Android 常见的几种传感器，且只是拿光线传感器做了个例子，但是没有进一步讲解其他传感器。现在就来讲讲其他常用的传感器。</p>
<a id="more"></a>
<p>下面先简单介绍下各个传感器的功能，介绍完后将通过一个小 Demo 介绍使用。</p>
<h1 id="光线传感器"><a href="#光线传感器" class="headerlink" title="光线传感器"></a>光线传感器</h1><p>光线传感器就是用于获取设备所处环境的<strong>光的强度</strong>。<strong>单位</strong>：勒克斯（lux）。介于<a href="http://www.liuguangmingcn.com/2016/08/11/Android%E4%BC%A0%E6%84%9F%E5%99%A8-%E4%B8%8A/" target="_blank" rel="external">上一篇博客</a>已经讲过，这里不再多讲。</p>
<h1 id="温度传感器"><a href="#温度传感器" class="headerlink" title="温度传感器"></a>温度传感器</h1><p>温度传感器用于获取设备周边的温度，单位：摄氏度（℃）。据我所知，目前世面上的手机中的温度传感器只适用于测量手机内部的温度（用于硬件保护），并不能测量外部温度。所以这里就不多介绍了。</p>
<h1 id="加速度传感器"><a href="#加速度传感器" class="headerlink" title="加速度传感器"></a>加速度传感器</h1><p>加速度传感器用于获取设备 X、Y、Z 三个方向上的加速度。</p>
<p>需要注意的是：传感器坐标系统和设备屏幕的坐标系统是不一样的。</p>
<blockquote>
<p><strong>传感器坐标系统</strong>中的 X轴是指向屏幕的右边，Y轴是指向屏幕的上边，Z轴是指向垂直于屏幕向外。</p>
<p><strong>屏幕坐标系统</strong>中的 X轴是指向屏幕的右边，Y轴是指向屏幕的下边，并没有 Z轴。 </p>
</blockquote>
<p><strong>如图所示：</strong></p>
<img src="/2016/08/21/Android传感器(中)/传感器坐标系统.png" alt="传感器坐标系统" title="传感器坐标系统">
<h1 id="重力传感器"><a href="#重力传感器" class="headerlink" title="重力传感器"></a>重力传感器</h1><p>重力传感器会得到一个三维向量，这个三维向量可现实重力的方向和强度。重力传感器的坐标系统跟加速度传感器的坐标系统是相同的（参考上边的左图）。</p>
<blockquote>
<p><strong>注意：</strong>当设备处于静止时，重力传感器的数值应该与加速度传感器的数值 <code>相等</code>。</p>
</blockquote>
<h1 id="线性加速度传感器"><a href="#线性加速度传感器" class="headerlink" title="线性加速度传感器"></a>线性加速度传感器</h1><p>线性加速度传感器会得到一个三维向量，这个三维向量是设备在各个方向上的加速度（不包括重力加速度）。线性加速度传感器的坐标系统与加速度传感器的坐标系统是相同的（参考上边的左图）。</p>
<blockquote>
<p>线性加速度传感器、重力传感器与加速度传感器，三者之间是有关系的。</p>
<p><strong>加速度传感器 = 重力传感器 + 线性加速度传感器</strong></p>
</blockquote>
<h1 id="方向传感器"><a href="#方向传感器" class="headerlink" title="方向传感器"></a>方向传感器</h1><p>方向传感器用于感应设备的摆放状态。方向传感器返回三个角度，通过这三个角度可以确定手机的摆放状态。</p>
<blockquote>
<p><strong>第一个角度：</strong>是指手机顶部朝向与正北方的夹角。即当手机绕着 Z轴旋转时，产生的角度。<em><em>1.角度为<code>0°</code>时，表明手机顶部为正北；2.角度为<code>90°</code>时，表明手机顶部为正东；3.角度为<code>180°</code>时，表明手机顶部为正南；4.角度为<code>270°</code>，表明手机顶部为正西。</em></em></p>
<p><strong>第二个角度：</strong>是指手机顶部或尾部翘起的角度。即当手机绕着 X轴倾斜时，产生的角度(-180° ~ 180°)。<em><em>1.当手机屏幕朝上水平放在桌子上时，角度为<code>0°</code>；2.将手机顶部抬起，沿底部旋转，直到手机屏幕朝下，角度将由<code>0°减小到-180°</code>；3.将手机底部抬起，沿顶部旋转，直到手机屏幕朝上，角度将由<code>0°增加到180°</code>。</em></em></p>
<p><strong>第三个角度：</strong>是指手机左侧或右侧翘起的角度。即当手机绕着 Y轴倾斜时，产生的角度(-90° ~ 90°)。<em><em>1.当手机屏幕朝上水平放在桌子上时，角度为<code>0°</code>；2.将手机左侧抬起，沿右侧旋转，直到手机与桌面垂直，角度将由<code>0°减小到-90°</code>；3. 将手机右侧抬起，沿左侧旋转，直到手机与桌面垂直，角度将由<code>0°增加到90°</code></em></em></p>
</blockquote>
<h1 id="陀螺仪传感器"><a href="#陀螺仪传感器" class="headerlink" title="陀螺仪传感器"></a>陀螺仪传感器</h1><p>陀螺仪传感器可得到设备的旋转速度，即设备绕 X、Y、Z轴的旋转速度。单位：弧度/秒。陀螺仪传感器的坐标系统与加速度传感器的坐标系统是相同的（参考上边的左图）。<em>旋转速度为正值时表示逆时针旋转；负值时表示顺时针旋转。</em></p>
<blockquote>
<p>返回的三个值分别对应的是设备绕 X、Y、Z 轴旋转的角速度。</p>
</blockquote>
<h1 id="压力传感器"><a href="#压力传感器" class="headerlink" title="压力传感器"></a>压力传感器</h1><p> 压力传感器可以得到设备所处环境的压力的大小。</p>
<h1 id="磁场传感器"><a href="#磁场传感器" class="headerlink" title="磁场传感器"></a>磁场传感器</h1><p>磁场传感器可得到设备外部的磁场强度。众所周知，即使周围没有任何直接磁场，设备也同样会处于地球的大磁场中。随着设备的摆放状态的改变，周围磁场在设备的X、Y、Z 方向上的影响也会随之发生改变。磁场传感器会得到三个数值，分别对应的是周围磁场分解到 X、Y、Z方向的磁场分量。单位：微特斯拉(μT)。</p>
<h1 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h1><p>常用的传感器功能就介绍到这吧。再继续的话，很多人就不耐烦了，拼命的说，我要的效果和代码。那先来看看效果：</p>
<img src="/2016/08/21/Android传感器(中)/Android传感器(中).gif" alt="Android传感器(中).gif" title="Android传感器(中).gif">
<p>从效果图中可以看到，没有温度传感器的值，这是因为手机一般不具备温度传感器，所以没有返回数值。因为涉及到硬件，所以需要使用真实设备进行演示，模拟器是不支持的。</p>
<p>那代码怎么实现的呢？接下来，我们来看看布局文件：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.cnlgming.sensorsdemo.MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ScrollView</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_orientation"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"2dp"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"#000"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_gyroscope"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"2dp"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"#000"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_magnetic"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"2dp"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"#000"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_gravity"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"2dp"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"#000"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_linear_acceleration"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"2dp"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"#000"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_temperature"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"2dp"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"#000"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_light"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"2dp"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"#000"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_pressure"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Java 代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.cnlgming.sensorsdemo;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.hardware.Sensor;</div><div class="line"><span class="keyword">import</span> android.hardware.SensorEvent;</div><div class="line"><span class="keyword">import</span> android.hardware.SensorEventListener;</div><div class="line"><span class="keyword">import</span> android.hardware.SensorManager;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">SensorEventListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> TextView mTvOrientation;</div><div class="line">    <span class="keyword">private</span> TextView mTvGyroscope;</div><div class="line">    <span class="keyword">private</span> TextView mTvMagnetic;</div><div class="line">    <span class="keyword">private</span> TextView mTvGravity;</div><div class="line">    <span class="keyword">private</span> TextView mTvLinearAcceleration;</div><div class="line">    <span class="keyword">private</span> TextView mTvTemperature;</div><div class="line">    <span class="keyword">private</span> TextView mTvLight;</div><div class="line">    <span class="keyword">private</span> TextView mTvPressure;</div><div class="line"></div><div class="line">    <span class="comment">// Sensor 管理服务</span></div><div class="line">    <span class="keyword">private</span> SensorManager mSensorManager;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        assignViews();</div><div class="line">        mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onResume();</div><div class="line">        <span class="comment">// 注册传感器监听器</span></div><div class="line"></div><div class="line">        <span class="comment">// 方向传感器</span></div><div class="line">        mSensorManager.registerListener(<span class="keyword">this</span>,</div><div class="line">                mSensorManager.getDefaultSensor(Sensor.TYPE_ORIENTATION),</div><div class="line">                SensorManager.SENSOR_DELAY_UI);</div><div class="line">        <span class="comment">// 陀螺仪传感器</span></div><div class="line">        mSensorManager.registerListener(<span class="keyword">this</span>,</div><div class="line">                mSensorManager.getDefaultSensor(Sensor.TYPE_GYROSCOPE),</div><div class="line">                SensorManager.SENSOR_DELAY_UI);</div><div class="line"></div><div class="line">        <span class="comment">// 磁场传感器</span></div><div class="line">        mSensorManager.registerListener(<span class="keyword">this</span>,</div><div class="line">                mSensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD),</div><div class="line">                SensorManager.SENSOR_DELAY_UI);</div><div class="line"></div><div class="line">        <span class="comment">// 重力传感器</span></div><div class="line">        mSensorManager.registerListener(<span class="keyword">this</span>,</div><div class="line">                mSensorManager.getDefaultSensor(Sensor.TYPE_GRAVITY),</div><div class="line">                SensorManager.SENSOR_DELAY_UI);</div><div class="line"></div><div class="line">        <span class="comment">// 线性加速度传感器</span></div><div class="line">        mSensorManager.registerListener(<span class="keyword">this</span>,</div><div class="line">                mSensorManager.getDefaultSensor(Sensor.TYPE_LINEAR_ACCELERATION),</div><div class="line">                SensorManager.SENSOR_DELAY_UI);</div><div class="line"></div><div class="line">        <span class="comment">// 温度传感器</span></div><div class="line">        mSensorManager.registerListener(<span class="keyword">this</span>,</div><div class="line">                mSensorManager.getDefaultSensor(Sensor.TYPE_AMBIENT_TEMPERATURE),</div><div class="line">                SensorManager.SENSOR_DELAY_UI);</div><div class="line"></div><div class="line">        <span class="comment">// 光线传感器</span></div><div class="line">        mSensorManager.registerListener(<span class="keyword">this</span>,</div><div class="line">                mSensorManager.getDefaultSensor(Sensor.TYPE_LIGHT),</div><div class="line">                SensorManager.SENSOR_DELAY_UI);</div><div class="line"></div><div class="line">        <span class="comment">// 压力传感器</span></div><div class="line">        mSensorManager.registerListener(<span class="keyword">this</span>,</div><div class="line">                mSensorManager.getDefaultSensor(Sensor.TYPE_PRESSURE),</div><div class="line">                SensorManager.SENSOR_DELAY_UI);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 退出时取消传感器监听器</span></div><div class="line">        mSensorManager.unregisterListener(<span class="keyword">this</span>);</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">assignViews</span><span class="params">()</span> </span>&#123;</div><div class="line">        mTvOrientation = (TextView) findViewById(R.id.tv_orientation);</div><div class="line">        mTvGyroscope = (TextView) findViewById(R.id.tv_gyroscope);</div><div class="line">        mTvMagnetic = (TextView) findViewById(R.id.tv_magnetic);</div><div class="line">        mTvGravity = (TextView) findViewById(R.id.tv_gravity);</div><div class="line">        mTvLinearAcceleration = (TextView) findViewById(R.id.tv_linear_acceleration);</div><div class="line">        mTvTemperature = (TextView) findViewById(R.id.tv_temperature);</div><div class="line">        mTvLight = (TextView) findViewById(R.id.tv_light);</div><div class="line">        mTvPressure = (TextView) findViewById(R.id.tv_pressure);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 传感器数值改变时的回调</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sensorEvent</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSensorChanged</span><span class="params">(SensorEvent sensorEvent)</span> </span>&#123;</div><div class="line">        <span class="comment">// 获取变化的传感器对应的数值</span></div><div class="line">        <span class="keyword">int</span> type = sensorEvent.sensor.getType();</div><div class="line">        <span class="comment">// 获取变化的值</span></div><div class="line">        <span class="keyword">float</span>[] values = sensorEvent.values;</div><div class="line"></div><div class="line">        StringBuilder sb = <span class="keyword">null</span>;</div><div class="line">        <span class="comment">// 根据不同的传感器做出不同的响应</span></div><div class="line">        <span class="keyword">switch</span> (type) &#123;</div><div class="line">            <span class="keyword">case</span> Sensor.TYPE_ORIENTATION:</div><div class="line">                sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">                sb.append(<span class="string">"方向传感器的数值:"</span>);</div><div class="line">                sb.append(<span class="string">"\n绕 X 轴旋转的角度:"</span>);</div><div class="line">                sb.append(values[<span class="number">0</span>]);</div><div class="line">                sb.append(<span class="string">"\n绕 Y 轴旋转的角度:"</span>);</div><div class="line">                sb.append(values[<span class="number">1</span>]);</div><div class="line">                sb.append(<span class="string">"\n绕 Z 轴旋转的角度:"</span>);</div><div class="line">                sb.append(values[<span class="number">2</span>]);</div><div class="line">                mTvOrientation.setText(sb.toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> Sensor.TYPE_GYROSCOPE:</div><div class="line">                sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">                sb.append(<span class="string">"陀螺仪传感器的数值:"</span>);</div><div class="line">                sb.append(<span class="string">"\n绕 X 轴旋转的角速度:"</span>);</div><div class="line">                sb.append(values[<span class="number">0</span>]);</div><div class="line">                sb.append(<span class="string">"\n绕 Y 轴旋转的角速度:"</span>);</div><div class="line">                sb.append(values[<span class="number">1</span>]);</div><div class="line">                sb.append(<span class="string">"\n绕 Z 轴旋转的角速度:"</span>);</div><div class="line">                sb.append(values[<span class="number">2</span>]);</div><div class="line">                mTvGyroscope.setText(sb.toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> Sensor.TYPE_MAGNETIC_FIELD:</div><div class="line">                sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">                sb.append(<span class="string">"磁场传感器的数值:"</span>);</div><div class="line">                sb.append(<span class="string">"\nX 轴上的磁场:"</span>);</div><div class="line">                sb.append(values[<span class="number">0</span>]);</div><div class="line">                sb.append(<span class="string">"\nY 轴上的磁场:"</span>);</div><div class="line">                sb.append(values[<span class="number">1</span>]);</div><div class="line">                sb.append(<span class="string">"\nZ 轴上的磁场:"</span>);</div><div class="line">                sb.append(values[<span class="number">2</span>]);</div><div class="line">                mTvMagnetic.setText(sb.toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> Sensor.TYPE_GRAVITY:</div><div class="line">                sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">                sb.append(<span class="string">"重力传感器的数值:"</span>);</div><div class="line">                sb.append(<span class="string">"\nX 轴方向上的重力:"</span>);</div><div class="line">                sb.append(values[<span class="number">0</span>]);</div><div class="line">                sb.append(<span class="string">"\nY 轴方向上的重力:"</span>);</div><div class="line">                sb.append(values[<span class="number">1</span>]);</div><div class="line">                sb.append(<span class="string">"\nZ 轴方向上的重力:"</span>);</div><div class="line">                sb.append(values[<span class="number">2</span>]);</div><div class="line">                mTvGravity.setText(sb.toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> Sensor.TYPE_LINEAR_ACCELERATION:</div><div class="line">                sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">                sb.append(<span class="string">"线性加速度传感器的数值:"</span>);</div><div class="line">                sb.append(<span class="string">"\nX 轴方向上的线性加速度:"</span>);</div><div class="line">                sb.append(values[<span class="number">0</span>]);</div><div class="line">                sb.append(<span class="string">"\nY 轴方向上的线性加速度:"</span>);</div><div class="line">                sb.append(values[<span class="number">1</span>]);</div><div class="line">                sb.append(<span class="string">"\nZ 轴方向上的线性加速度:"</span>);</div><div class="line">                sb.append(values[<span class="number">2</span>]);</div><div class="line">                mTvLinearAcceleration.setText(sb.toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> Sensor.TYPE_AMBIENT_TEMPERATURE:</div><div class="line">                sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">                sb.append(<span class="string">"温度传感器的数值:"</span>);</div><div class="line">                sb.append(<span class="string">"\n当前的温度:"</span>);</div><div class="line">                sb.append(values[<span class="number">0</span>]);</div><div class="line">                mTvTemperature.setText(sb.toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> Sensor.TYPE_LIGHT:</div><div class="line">                sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">                sb.append(<span class="string">"光线传感器的数值:"</span>);</div><div class="line">                sb.append(<span class="string">"\n当前的光线强度:"</span>);</div><div class="line">                sb.append(values[<span class="number">0</span>]);</div><div class="line">                mTvLight.setText(sb.toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> Sensor.TYPE_PRESSURE:</div><div class="line">                sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">                sb.append(<span class="string">"压力传感器的数值:"</span>);</div><div class="line">                sb.append(<span class="string">"\n当前的压力:"</span>);</div><div class="line">                sb.append(values[<span class="number">0</span>]);</div><div class="line">                mTvPressure.setText(sb.toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 传感器精度改变时的回调</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sensor</div><div class="line">     * <span class="doctag">@param</span> i</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAccuracyChanged</span><span class="params">(Sensor sensor, <span class="keyword">int</span> i)</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>从效果图及代码也可以看出，演示 Demo 相对比较简单。</p>
<blockquote>
<p>Andrroid 传感器(下) 将会以一个简单实例的方式呈现。敬请期待~</p>
</blockquote>
<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/cnLGMing/AndroidDemo/tree/master/SensorsDemo" target="_blank" rel="external">Github 传送门</a></p>
<hr>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>邮箱：liuguangmingcn@163.com</strong></p>
<p><strong>文章若有不对之处，欢迎留言指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android传感器(上)]]></title>
      <url>http://yoursite.com/2016/08/11/Android%E4%BC%A0%E6%84%9F%E5%99%A8-%E4%B8%8A/</url>
      <content type="html"><![CDATA[<p>在一年前，在做智能农业检测系统项目时，就有机会接触过传感器方面的知识，只是当时自己并没有直接接触到这方面的代码，而是进行数据的处理。所以仅仅是擦肩而过的感觉。</p>
<p>目前已经有很多传感器集成到了 Android 手机中，经常听到的有：光线传感器、方向传感器、加速度传感器、重力传感器、陀螺仪传感器等等。在开发中很有可能会遇到使用传感器的知识。通过传感器，我们可以开发各种新颖的应用程序，例如：指南针、水平仪、重力感应游戏等等。</p>
<a id="more"></a>
<p>由于 Android 为提供了强大的管理服务，所以在 Android 中开发传感器应用还是相对比较简单的。下面就来说说，开发传感器应用时的步骤。</p>
<h1 id="传感器的使用步骤"><a href="#传感器的使用步骤" class="headerlink" title="传感器的使用步骤"></a>传感器的使用步骤</h1><ol>
<li><strong>获取传感器管理服务</strong>，通过 Context 的 <code>getSystemService(Context.SENSOR_SERVICE)</code> 方法；</li>
<li><strong>获取指定类型的传感器</strong>，通过 SensorManager 的 <code>getDefaultSensor(int type)</code> 方法；</li>
<li><strong>注册指定传感器的注册监听</strong>，通过 SensorManager 的<br><code>registerListener(SensorEventListener listener, Sensor sensor, int samplingPeriodUs)</code>；<ul>
<li>listener：是指监听传感器的时间监听器，需要实现 <code>SensorEventListener 接口</code>;</li>
<li>sensor：是指传感器对象;</li>
<li>samplingPeriodUs：是指传感器数值的刷新频率，有以下4种：<ul>
<li><code>SENSOR_DELAY_FASTEST = 0</code> ：最快，即延迟最小咯。只有特别依赖传感器数据的应用推荐采用这个频率。缺点：耗电、由于传递的是原始数据，所以算法处理不好将会影响应用的性能。</li>
<li><code>SENSOR_DELAY_GAME = 1</code> : 顾名思义，适合游戏的刷新频率，能够适合实时性的需求。</li>
<li><code>SENSOR_DELAY_NORMAL = 3</code> : 正常频率，适用于对实时性不是特别高的应用。</li>
<li><code>SENSOR_DELAY_UI = 2</code> : 很明显，这个适用于用户界面更新的频率，具有省电、开销小的优点，缺点就是延迟大。</li>
</ul>
</li>
</ul>
</li>
<li><strong>记得不用的时候需要取消注册的监听服务</strong>，通过SensorManager 的 <code>unregisterListener(SensorEventListener listener)</code>。</li>
</ol>
<p>以上就是传感器的基本使用步骤。</p>
<blockquote>
<p>看起来很简单对吧，其实实现起来确实也不难。下面就写一个简单的 Demo，这个 Demo 将使用到<strong>光线传感器</strong>，将当前光线强度显示在手机界面上。</p>
</blockquote>
<p><strong>先来看下效果图：</strong>（用手挡了光线）</p>
<img src="/2016/08/11/Android传感器-上/光线传感器.gif" alt="光线传感器效果图" title="光线传感器效果图">
<p>布局界面很简单，这里就不给出来了，就一个 TextView 显示光线强度。</p>
<p>关键代码，如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.hardware.Sensor;</div><div class="line"><span class="keyword">import</span> android.hardware.SensorEvent;</div><div class="line"><span class="keyword">import</span> android.hardware.SensorEventListener;</div><div class="line"><span class="keyword">import</span> android.hardware.SensorManager;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * @创建者 　　　　cnLGMing</div><div class="line"> * @博客 　　　　  www.liuguangmingcn.com</div><div class="line"> * @创建时间 　　　16/8/11 17:01</div><div class="line"> * @描述 　　　   光线传感器的简单使用</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">SensorEventListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> TextView      mTvLgiht;</div><div class="line">    <span class="comment">// 传感器管理</span></div><div class="line">    <span class="keyword">private</span> SensorManager mSensorManager;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        mTvLgiht = (TextView) findViewById(R.id.tv_lgiht);</div><div class="line">        <span class="comment">// 获取传感器管理</span></div><div class="line">        mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);</div><div class="line"></div><div class="line">        <span class="comment">// 为光线传感器设置监听事件</span></div><div class="line">        mSensorManager.registerListener(<span class="keyword">this</span>,</div><div class="line">                mSensorManager.getDefaultSensor(Sensor.TYPE_LIGHT),</div><div class="line">                SensorManager.SENSOR_DELAY_UI);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 取消光线传感器的监听事件</span></div><div class="line">        mSensorManager.unregisterListener(<span class="keyword">this</span>);</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 当传感器的数值发生变化时,回调此方法</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sensorEvent</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSensorChanged</span><span class="params">(SensorEvent sensorEvent)</span> </span>&#123;</div><div class="line">        <span class="comment">// 获取变化的数值</span></div><div class="line">        <span class="keyword">float</span>[] values = sensorEvent.values;</div><div class="line">        mTvLgiht.setText(<span class="string">"当前的光线强度为: "</span> + values[<span class="number">0</span>] + <span class="string">" lux"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 当传感器的精度发生变化时,回调此方法</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> sensor</div><div class="line">     * <span class="doctag">@param</span> i</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAccuracyChanged</span><span class="params">(Sensor sensor, <span class="keyword">int</span> i)</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Andrroid 传感器(上) 到此结束。</p>
<blockquote>
<p>Andrroid 传感器(中)、Andrroid 传感器(下) 我也将尽快更新。敬请期待~</p>
</blockquote>
<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/cnLGMing/AndroidDemo/tree/master/LightSensorDemo" target="_blank" rel="external">Github 传送门</a></p>
<hr>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>邮箱：liuguangmingcn@163.com</strong></p>
<p><strong>文章若有不对之处，欢迎留言指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试_04]]></title>
      <url>http://yoursite.com/2016/08/03/%E9%9D%A2%E8%AF%95-04/</url>
      <content type="html"><![CDATA[<p>面试 Android 开发工程师<br><a id="more"></a></p>
<ul>
<li>公司：深圳市网安计算机安全检测技术有限公司</li>
<li>职位：Android 开发工程师</li>
<li>时间：2016/08/03 9:50</li>
</ul>
<h1 id="笔试"><a href="#笔试" class="headerlink" title="笔试"></a>笔试</h1><ul>
<li>Android 中 Service 的实现方法有哪些？</li>
<li>请说下 final、finally、finalize 的区别？</li>
<li>抽象类与接口有什么区别？</li>
<li>请回答一下 HTTP 请求的基本过程</li>
<li>请问 Java 的反射(reflection)机制是什么？</li>
<li>Java 中怎样实现多线程？</li>
<li>请描述下 Activity 的声明周期</li>
<li>Android 中，请简述 jni 的调用过程</li>
<li>是否进行过 apk 反编译？如何防止反编译？</li>
<li>如何设定应用为系统级别的应用？</li>
<li>如何对通话进行录音？</li>
<li>如何对操作进行录像？</li>
</ul>
<h1 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h1><ul>
<li>简单自我介绍，以及说下为什么离开上一家公司？</li>
<li>简述说下，Android 的数据存储类型</li>
<li>Sharedpreferences 存储于 SQLite 存储有什么区别？</li>
<li>Handle、Message 和 Loop 有什么关系？</li>
<li>如何做适配？</li>
<li>ListView 加载大图片时，如何防止 OOM ？</li>
<li>HTTP 与 HTTPS 有什么不同？如何选择？</li>
<li>有没有接触过 H5 和 JS，Android 如何与它们进行配合？</li>
<li>如何反编译 apk 文件？如果开发者已经进行混淆和加固，还有没有办法反编译？如何做？</li>
<li>如何进行文件上传？有没有接触过 ftp ？</li>
<li>一个集合中有相同的元素，怎么去重？</li>
<li>List、Map、Set 有什么区别？</li>
<li>在登录账号时，如何保证密码的安全性？</li>
<li>除了 SQLite，还会哪些数据库？数据库操作熟悉吗？如何删除数据库中，相同名字的数据？用哪个字段？</li>
</ul>
<hr>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>邮箱：liuguangmingcn@163.com</strong></p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试_03]]></title>
      <url>http://yoursite.com/2016/07/28/%E9%9D%A2%E8%AF%95-03/</url>
      <content type="html"><![CDATA[<p>面试 Android 游戏 SDK 开发<br><a id="more"></a></p>
<ul>
<li>公司：深圳乐聚互动科技有限公司</li>
<li>职位：Android SDK 开发工程师</li>
<li>时间：2016/07/27 11:10</li>
</ul>
<h1 id="笔试"><a href="#笔试" class="headerlink" title="笔试"></a>笔试</h1><ul>
<li>什么是嵌入式实时操作系统？Android 操作系统属于实时操作系统吗？</li>
<li>描述一下 Android 的系统架构</li>
<li>Android 的数据存储方式有哪些？</li>
<li>简述下 ContentProvider 是如何实现数据共享的</li>
<li>如何讲一个 Activity 设置为窗口样式？</li>
<li>Android 中常用的五种布局</li>
<li>简述下 Activity 的生命周期</li>
<li>简述下 Android 应用程序结构是哪些？</li>
<li>请继承 SQLiteOpenHelper 实现<ul>
<li>创建一个版本为 <strong>1</strong> 的 <strong>“diaryOpenHelper.db”</strong> 的数据库</li>
<li>同时创建一个 <strong>“diary”</strong> 表（包含一个 _id 主键并自增长、topic 字符型100长度、content 字符型100长度）</li>
<li>在数据库版本变化时，请删除 diary 表，并重新创建 diary 表</li>
</ul>
</li>
</ul>
<h1 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h1><ul>
<li>如何处理野指针</li>
<li>如何进行控制内存以及优化</li>
<li>支付宝、网银支付丢失订单怎么办</li>
<li>MySQL 会吗？怎么优化</li>
<li>没有处理到的异常需要怎么做，才能防止 APP 异常退出</li>
<li>会算法吗？会哪些？</li>
<li>有独立开发的能力吗？</li>
</ul>
<hr>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>邮箱：liuguangmingcn@163.com</strong></p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[[转]写给即将和终将毕业的程序员们]]></title>
      <url>http://yoursite.com/2016/07/26/%E8%BD%AC-%E5%86%99%E7%BB%99%E5%8D%B3%E5%B0%86%E5%92%8C%E7%BB%88%E5%B0%86%E6%AF%95%E4%B8%9A%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BB%AC/</url>
      <content type="html"><![CDATA[<p>这篇文章大概需要花费8分钟的时间，看后会有些许的收获。</p>
<a id="more"></a>
<h1 id="初入职场，对一个程序员来说最重要的是什么"><a href="#初入职场，对一个程序员来说最重要的是什么" class="headerlink" title="初入职场，对一个程序员来说最重要的是什么?"></a>初入职场，对一个程序员来说最重要的是什么?</h1><p>技术基础是指作为一名程序员来讲的一些基本的、通用的技术，诸如数据结构、算法、数学能力、软件工程理论、操作系统基本知识、编译原理以及你所从事的技术岗位所使用的技术。这些在你的程序员生涯中它们都将跟随你一辈子，无论你从事什么技术岗位，在这个行业中，这些东西都是共通和必要的，是身为一名软件工程师的立足之本。</p>
<p>业务积累指的是你在部门里边具体承担的业务，相对前一条来说，这一条是不存在行业中的普遍性和通用性的，然而如果说前面一条是使你顺利拿到校招offer的前提，那么这一条则是你所在的公司每个月付给你“比任何一个行业的任何职位在初期都要高得多”的薪资的理由。换言之，如果你是一名实习生而你手上却没有任何业务积累，你该为自己能否得到offer而感到忐忑，而相反的情况如果你手上已有很多业务，每天忙得要命，你也该清楚现在的这个部门给你发offer应该是板上钉钉的事了。</p>
<p>第三点也许是最容易被我们程序员这样一个群体所忽略的——情商。这也是本文真正想要表达的重点，是我想在这篇文章中给你的建议。</p>
<h1 id="程序员的情商有那么重要吗"><a href="#程序员的情商有那么重要吗" class="headerlink" title="程序员的情商有那么重要吗?"></a>程序员的情商有那么重要吗?</h1><p>但凡是一名公司职员，就免不了职场中的人情冷暖、酸甜苦辣。因为身处公司最基层，每一个工作日你无法避免的要与各种人和事打交道。说的直白一点，有人的地方就有利益，职场中人与人之间的利益不可能没有冲突。</p>
<p>当你的个人利益与其他同事的个人利益、团队利益甚至公司的利益发生矛盾时，你至少应该清楚没有哪个职场人能够避免这一点。</p>
<p>那些充满“正能量”的新员工培训可能告诉你什么“主人翁意识”什么“不想当老板的员工不是好员工”，然而在现阶段对你来说最重要的却是融入团队，和你身边的同事还有领导搞好关系。</p>
<p>如果你跟部门里的任何一位同事关系闹僵，我敢保证在这个公司里你将举步维艰，每天上班的心情犹如上坟。</p>
<h1 id="情商体现在哪里"><a href="#情商体现在哪里" class="headerlink" title="情商体现在哪里?"></a>情商体现在哪里?</h1><p>对于一名初入行业的软件工程师来说，你不只需要和代码打交道，更需要与产品沟通需求、向领导汇报工作进度以及跟其他技术岗位的同事协商和联调代码。</p>
<p>我从没见过或是听过哪个公司的哪个项目可以从产品策划到UI设计再到前后端编程开发调试测试上线发布后续运营维护等工作全部由一个人来完成的，如果有，这也一定不常见。</p>
<p>我知道校招生们多数愿意进BAT这些大公司，我当年也不例外，并且回头看来这一步也确实没有错，大公司给你的不只是更高的起薪以及毕业时在老师们面前优人一等的光环，更重要的是你将会认识更多和你一样优秀的同龄人，你的视野将会更开阔。</p>
<p>然而细细想想在一个大公司里，我们工作的更多时间是开会而不是写代码。扪心自问在一个公司里干了一个月以后，你究竟写了多少行代码?你又开了多少个会?</p>
<p>这不叫效率低下，在公司体制庞大以后这些沟通我认为全都是必要的，这些花在管理和沟通上面的成本对公司来讲绝对值得，就像一块硬盘能存下多少数据就必须产生相应的区块保存数据的物理地址和逻辑地址，再加上系统级的内存管理、应用级的框架消耗和垃圾回收，仔细想想我们每天使用的手机、平板和电脑设备的更多内存资源和CPU使用其实都是消耗在了设备自身对数据的管理上，机器尚且如此，更何况人呢。</p>
<p>所以不要对开会产生反感，每一次会议都是你学习的机会，更是你表现自己的机会。如果在一次会议上你提出了一处UI设计稿上面的缺失刚好是你的leader没考虑到的，他下次还会带上你一起开会;如果在服务端Rest接口确认的过程中你想到了一个leader们没考虑到的数据项，这很可能为整个开发周期节省一到两天;与产品沟通需求时，并不是一味地否定和砍减需求，也不是毫不过脑子的点头，你应该设身处地的站在把一个产品做到尽善尽美的角度去跟对方沟通，删掉对大家都没有利益的需求，必要的时候甚至增添一个对双方都有收益的需求。</p>
<h1 id="初期应该如何融入团队"><a href="#初期应该如何融入团队" class="headerlink" title="初期应该如何融入团队?"></a>初期应该如何融入团队?</h1><p>初入职场的你，就如同一个刚进入球队坐在替补席上的小球员一样，最初很可能连90分钟末补时的那几分钟上场机会对你来说都是无比珍贵。</p>
<p>在这种情况下，要学会捡别人不要的活儿干，而不是坐在工位上打开qq和同学抱怨自己在部门里不受重视。</p>
<p>举个例子:如果说部门里缺前端，你作为服务端也该自己学会写后台管理页面，这些东西leader看在眼里，他会明白你的努力。</p>
<h1 id="遇到技术上的问题该怎么解决"><a href="#遇到技术上的问题该怎么解决" class="headerlink" title="遇到技术上的问题该怎么解决?"></a>遇到技术上的问题该怎么解决?</h1><p>对于这个问题的看法有很多版本，我个人偏向于尽量靠自己解决问题。</p>
<p>作为一名初入岗位的工程师，不是看不起你，很多时候你对自己遇到的问题究竟该不该问别人，该问的话该问谁你都是不知道的。在这样的情况下，你很可能把一个google五分钟就能解决的程序语法报错拿过去问了你的同事，问问题存在沟通成本和理解成本，你的描述不清以及对方缺乏上下文了解这些都可能增加以上两个成本，这样一来不仅耽误双方的时间，长此以往还会让对方觉得你记得技术基本功不扎实，独立处理问题能力差。</p>
<p>我认为对于程序员来说，总有一天你要独立面对这些编译环境、运行环境的偏门bug，因为你不可能一辈子只写一门语言或是只从事一种开发岗位，你现在可以问你的导师问你的leader，那么你自己当上leader之后又该问谁呢?总不能告诉自己的老板，这问题太难了，我解决不了。</p>
<p>我记不清好像是之前百度的首席工程师说过的一句话：衡量一个程序员价值的标准并不是他掌握了多少知识，而是他掌握的知识与学会这些所花的时间之比。</p>
<p>对于初入开发岗位的你来说，每一次踩到一个坑然后独立填坑的经历都将会加速你对更多技术领域内的知识和问题的学习速度，也将会提高你作为一个工程师的价值。</p>
<h1 id="如何与产品沟通"><a href="#如何与产品沟通" class="headerlink" title="如何与产品沟通?"></a>如何与产品沟通?</h1><p>在技术圈里这是老生常谈的话题，我认为与产品沟通的过程中是最能体现出一个程序员情商的时候。无论对方提出的需求是怎样的，你考虑问题的逻辑应该是：当前提的这一条需求做完以后对产品有什么收益?对技术这边又有什么收益?更重要的是leader们是否会在乎这一点?</p>
<p>然而这一切都应该发生在你的内心中，权衡利弊之后如果有什么没考虑到的你可以提出来，如果并不是十分确认自己的想法，你可以等会后私下里和你的leader提出自己的看法，这既是对leader的尊重也是节省开会时间。</p>
<p>幸运的是，在互联网这个行业里，需求沟通的过程中，技术人员的话语权通常还是较大的，然而绝不要滥用你的话语权。</p>
<p>我可以扪心自问的说，在我正式入职以后沟通过的每一位产品，没有和任何一位发生过争吵，相反的是产品们都愿意与我对需求。</p>
<p>这并不是因为我对任何奇葩的需求都有求必应，而是因为我把“与PM对需求”这件事放在“人情”这样感性的层面来考虑，而不像很多程序员那样只考虑代码逻辑的理性思维方式。</p>
<p>人是复杂的动物，一个PM提出了一个看似无理的需求，你却不应该不问青红皂白直接拒之门外，设身处地将心比心的想一想，公司里这样复杂的环境下，他/她是否也有自己的无奈和苦衷?如果有，这个问题是否存在其他折中的解决方案?</p>
<p>情商不是叫你如何精明的算计对方，那叫“别有用心的智商”，情商是包容与理解。有了人情作为基础，我觉得没有哪个PM会和你在一两天的deadline问题上面扯皮。</p>
<p>即使利益之间的冲突真的无法解决，也没有任何折中方案，你至少可以把问题记录下来，拿到leader们那里交给他们去做决定，而没必要当面撕破脸伤及双方的感情，毕竟产品是公司的，人际关系是自己的。</p>
<h1 id="如何看待加班"><a href="#如何看待加班" class="headerlink" title="如何看待加班?"></a>如何看待加班?</h1><p>加班就像借钱，原则上必然是救急不救穷。然而并不是说对于一个“穷”的部门程序员就一定要选择离开，这既不是负责任的表现，又错过了一个成为部门核心骨干力量的机会。很多公司里的leader都是在危难关头扛下了部门的人手不足的压力，leader的职位也就顺理成章。</p>
<p>ruby on rails的作者曾说过，熬夜加班相当于借高利贷，偶尔一次可能是难免的，但如果你的工作长期需要你熬夜加班，你可能确实该考虑换一份工作。</p>
<p>最后祝愿各位未来的程序员在校招的潮流中能够成为offer收割机，并且得到自己真正心仪公司的offer!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[adb常用命令]]></title>
      <url>http://yoursite.com/2016/07/25/adb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<p>熟练使用 <strong>adb 命令</strong> 有助于提高开发效率。 很多公司在面试时也会询问有没有用过 adb 命令，常用的有哪些？若能脱口而出，直接说明你经常使用。</p>
<a id="more"></a>
<p>不多说，直接上命令了。</p>
<hr>
<ul>
<li><strong>启动 adb 服务：</strong><code>adb start-server</code></li>
<li><strong>关闭 adb 服务：</strong><code>adb kill-server</code></li>
<li><strong>查看所有连接成功的设备：</strong><code>adb devices</code></li>
</ul>
<hr>
<blockquote>
<p><strong>以下命令，若只有一台设备，可忽略命令中的 <code>-s 设备名</code></strong>。</p>
</blockquote>
<p>例如：<strong>进入指定在线设备的 shell：</strong><code>adb -s 设备名 shell</code>【若只有一台，可直接使用：<code>adb shell</code>】</p>
<ul>
<li><strong>进入指定在线设备的 shell：</strong><code>adb -s 设备名 shell</code></li>
<li><strong>重启手机：</strong><code>adb -s 设备名 reboot</code></li>
<li><strong>重启到bootloader,即刷机模式：</strong><code>adb -s 设备名 reboot bootloader</code></li>
<li><strong>重启到 recovery，即恢复模式：</strong><code>adb -s 设备名 recovery</code></li>
<li><strong>查看 logcat：</strong> <code>adb -s 设备名 logcat</code></li>
<li><strong>清除 log 缓存：</strong><code>adb -s 设备名 logcat -c</code></li>
<li><strong>安装 APP：</strong><code>adb -s 设备名 install -r xxx.apk</code>(xxx表示 apk 的全路径，通常情况下，输入完-r后直接将apk 拖到命令窗口)</li>
<li><strong>卸载 APP：</strong><code>adb -s 设备名 uninstall 包名</code></li>
<li><strong>将手机中的文件复制出来：</strong><code>adb -s 设备名 pull 文件全路径 目的地全路径</code></li>
<li><strong>向手机发送文件：</strong><code>adb -s 设备名 push 文件全路径 目的地全路径</code></li>
</ul>
<hr>
<blockquote>
<p><strong>以下命令，若没有进入到设备的 shell，需要在最前面添加 <code>adb -s 设备名 shell</code> 才能执行</strong></p>
</blockquote>
<ul>
<li><strong>清除指定应用的数据：</strong><code>pm clear 包名</code></li>
<li><strong>启动某个应用的某个 Activity：</strong><code>am start -n 包名/包名.Activity名</code></li>
<li><strong>查看进程信息：</strong><code>ps</code></li>
<li><strong>查看所有已安装的应用的包名：</strong><code>pm list packages -f</code></li>
<li><strong>查看栈顶 Activity，可以用来获取包名，可以用来查看其它 APP 的包名：</strong><code>dumpsys activity top</code></li>
<li><strong>内存使用情况 Memory Usage：</strong><code>dumpsys meminfo</code></li>
<li><strong>包信息 Package Information：</strong><code>dumpsys package</code></li>
<li><strong>查看手机 CPU 以及手机架构：</strong><code>cat /proc/cpuinfo</code></li>
<li><strong>刷新一次内存信息，然后返回：</strong><code>top -n 1</code></li>
<li><strong>查看 WiFi 密码：</strong><code>cat /data/misc/wifi/*.conf</code>(需要权限)</li>
</ul>
<hr>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>邮箱：liuguangmingcn@163.com</strong></p>
<p><strong>文章若有不对之处，欢迎留言指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[zxing的简单使用]]></title>
      <url>http://yoursite.com/2016/07/23/zxing%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>业内都说没有二维码扫描及生成的 APP，不是一个好的 APP，为了不掉队，学习了 Google 员工的 <a href="https://github.com/zxing/zxing" target="_blank" rel="external">zxing</a> 的开源项目。由于本人能力有限， <a href="https://github.com/zxing/zxing" target="_blank" rel="external">zxing</a> 项目实在超出了本人的范围，我只选取了 二维码扫描、解析及生成的代码。<br><a id="more"></a></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>将二维码集成到 APP 中已经是一件在正常不过的事，所以我就不多介绍二维码的重要性那些了。直接开始吧~</p>
<hr>
<h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p>依我个人而言，我喜欢先看到效果，才有动力继续往下看。</p>
<img src="/2016/07/23/zxing的简单使用/zxing的简单使用.gif" alt="zxing的简单使用演示" title="zxing的简单使用演示">
<hr>
<h1 id="zxing"><a href="#zxing" class="headerlink" title="zxing"></a>zxing</h1><p><strong>项目地址</strong>：<a href="https://github.com/zxing/zxing" target="_blank" rel="external">GitHub传送门</a></p>
<p><strong>zxing</strong> 是一个开源 Java 类库用于解析多种格式的 1D/2D 条形码、二维码。目标是能够对 QR 编码、Data Matrix、UPC 的 1D 条形码进行解码。 其提供了多种平台下的客户端包括：Java SE 和 Android。</p>
<hr>
<blockquote>
<p><strong>本博文将介绍：</strong></p>
<p><strong>1、扫描二维码：</strong>点击按钮，跳转到 zxing 中的 Activity 去扫描，并将得到的结果显示到 TextView</p>
<p><strong>2、解析二维码</strong>：长按二维码，进行解析，并将二维码中的内容弹 Toast 提示</p>
<p><strong>3、生成二维码：</strong>点击按钮，将 <strong><a href="http://www.liuguangmingcn.com" target="_blank" rel="external">http://www.liuguangmingcn.com</a></strong> 生成二维码，并显示出来</p>
</blockquote>
<hr>
<h1 id="zxing-的简单使用"><a href="#zxing-的简单使用" class="headerlink" title="zxing 的简单使用"></a>zxing 的简单使用</h1><p>为了方便使用，已将其抽取出来成一个 <code>module</code> 基于 <strong>zxing 3.2.1</strong> 的。可直接 <strong>import</strong> 到 项目中使用。<strong><a href="https://github.com/cnLGMing/lib_zxing" target="_blank" rel="external">lib_zxing 传送门</a></strong> </p>
<p>1.<strong>导入 <code>lib_zxing</code> ，设置为 module；</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function">compile <span class="title">project</span><span class="params">(<span class="string">':lib_zxing'</span>)</span></span></div></pre></td></tr></table></figure>
<p>2.<strong>扫描二维码，核心代码</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> REQUEST_CODE = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="comment">/* 扫描二维码按钮 */</span></div><div class="line">mBtnScan.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, CaptureActivity.class);</div><div class="line">        startActivityForResult(intent, REQUEST_CODE);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>tips：</strong>大家应该注意到了，这里使用了 <strong>startActivityForResult</strong> ，明显需要重写 <strong>onActivityResult</strong>，用于回到扫描得到的结果。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</div><div class="line">    <span class="comment">// CaptureActivity中使用RESULT_OK作为结果返回码</span></div><div class="line">    <span class="keyword">if</span> (resultCode == RESULT_OK) &#123;  <span class="comment">// RESULT_OK == -1</span></div><div class="line">        Bundle bundle = data.getExtras();</div><div class="line">        <span class="comment">// CaptureActivity中使用"result"作为 key</span></div><div class="line">        String scanResult = bundle.getString(<span class="string">"result"</span>);</div><div class="line">        mTvScanResult.setText(<span class="string">"扫描结果: "</span> + scanResult);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>3.<strong>生成二维码</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 生成二维码按钮 */</span></div><div class="line">mBtnCreate.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">/**</span></div><div class="line">             * 第一个参数:内容</div><div class="line">             * 第二个参数:二维码图片的长宽(其实是正方形)</div><div class="line">             */</div><div class="line">            Bitmap bitmap = QRCodeEncoder.encodeAsBitmap(<span class="string">"http://www.liuguangmingcn.com"</span>, <span class="number">500</span>);</div><div class="line">            mIvCreateBarcode.setImageBitmap(bitmap);</div><div class="line">        &#125; <span class="keyword">catch</span> (WriterException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>4.<strong>解析二维码</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;DecodeHintType, ?&gt; HINTS = <span class="keyword">new</span> EnumMap&lt;&gt;(DecodeHintType.class);</div><div class="line"><span class="comment">/* 长按二维码时,解析二维码数据 */</span></div><div class="line">mIvCreateBarcode.setOnLongClickListener(<span class="keyword">new</span> View.OnLongClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onLongClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="comment">// 开启cache</span></div><div class="line">        mIvCreateBarcode.setDrawingCacheEnabled(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 通过cache机制获取缓存图片</span></div><div class="line">        Bitmap bitmap = Bitmap.createBitmap(mIvCreateBarcode.getDrawingCache());</div><div class="line">        <span class="comment">// 关闭cache.获取cache通常会占用一定的内存，所以通常不需要的时候有必要对其进行清理.</span></div><div class="line">        <span class="comment">// 通过destroyDrawingCache或setDrawingCacheEnabled(false)实现。</span></div><div class="line">        mIvCreateBarcode.setDrawingCacheEnabled(<span class="keyword">false</span>);</div><div class="line">        decodeQRCode(bitmap);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 解析二维码.因为解析可能会耗时,所以使用了AsyncTask进行处理</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> bitmap 带解析的二维码图片</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">decodeQRCode</span><span class="params">(<span class="keyword">final</span> Bitmap bitmap)</span> </span>&#123;</div><div class="line">    <span class="keyword">new</span> AsyncTask&lt;Void, Void, String&gt;() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">protected</span> String <span class="title">doInBackground</span><span class="params">(Void... params)</span> </span>&#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">int</span> width = bitmap.getWidth();</div><div class="line">                <span class="keyword">int</span> height = bitmap.getHeight();</div><div class="line">                <span class="keyword">int</span>[] pixels = <span class="keyword">new</span> <span class="keyword">int</span>[width * height];</div><div class="line">                bitmap.getPixels(pixels, <span class="number">0</span>, width, <span class="number">0</span>, <span class="number">0</span>, width, height);</div><div class="line">                <span class="comment">// 将 ARGB 像素阵列转换为 RGB</span></div><div class="line">                RGBLuminanceSource source = <span class="keyword">new</span> RGBLuminanceSource(width, height, pixels);</div><div class="line">                <span class="comment">// 进行解码</span></div><div class="line">                Result result = <span class="keyword">new</span> MultiFormatReader().decode(</div><div class="line">                        <span class="keyword">new</span> BinaryBitmap(<span class="keyword">new</span> HybridBinarizer(source)), HINTS);</div><div class="line">                <span class="keyword">return</span> result.getText();</div><div class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"解析出错."</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p><strong>zxing</strong> 中的二维码扫描、解析、生成的简单使用到此就结束了。</p>
<blockquote>
<p><strong>由于权限问题，需要将 <code>targetSdkVersion</code> 设置为低于 23。</strong></p>
</blockquote>
<hr>
<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/cnLGMing/AndroidDemo/tree/master/zxingDemo" target="_blank" rel="external">Demo传送门</a></p>
<p><a href="https://github.com/cnLGMing/lib_zxing" target="_blank" rel="external">lib_zxing 传送门</a></p>
<hr>
<p><strong>参考博文：</strong><br><a href="http://kuangjianwei.blog.163.com/blog/static/190088953201361015055110/" target="_blank" rel="external">zxing源码分析——QR码部分 </a></p>
<p><a href="http://blog.csdn.net/qq_26787115/article/details/50677143" target="_blank" rel="external">Android高级控件（三）—— 使用Google ZXing实现二维码的扫描和生成相关功能体系</a></p>
<hr>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>邮箱：liuguangmingcn@163.com</strong></p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android6.0新的权限机制]]></title>
      <url>http://yoursite.com/2016/06/25/Android6.0%E6%96%B0%E7%9A%84%E6%9D%83%E9%99%90%E6%9C%BA%E5%88%B6/</url>
      <content type="html"><![CDATA[<p>早已听说 Android 6.0 更新了权限机制，但由于没有学习，在工作中一直尚未使用，为了防止新的权限机制带来的问题，将 <code>targetSdkVersion</code> 调为了 <strong>22</strong>，这显然是治标不治本的方法，所以今天抽空学习了 Android 6.0 的运行时权限处理机制。<br><a id="more"></a></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Android 6.0 已发布多时，新版本的 SDK 给开发者带了一些新控件的同时，也带来了新的<strong>权限机制</strong>。在上几篇文章中，介绍了一些 Android 6.0 带来的新控件，现在我们来学习下全新的权限机制。</p>
<hr>
<h1 id="新权限机制的变化"><a href="#新权限机制的变化" class="headerlink" title="新权限机制的变化"></a>新权限机制的变化</h1><p>不知你是否和我一样反感一些APP滥用权限。</p>
<p>Android 6.0 之前，若你要使用 APP，你只能被迫同意这个 APP 的所有权限；不同意则意味着不能安装。倘若遇到有良心的开发者开发的 APP ，同意是没有问题的；但是当一个单机的斗地主 APP，需要访问通讯录、发送短信等权限时，你还会同意吗？</p>
<p>Android 6.0 之后，我们可以直接安装一款 APP，当这个 APP 需要使用某一权限时，会弹出提示框询问用户是否同意。当我们认为是不合理的权限时，我们完全可以拒绝此 APP 使用该权限。当我们之前同意(或拒绝)这个 APP 使用某一权限，但一段时间后，觉得不合理时，完全可以去权限设置中心进行对该 APP 进行解除(或授权)该权限。</p>
<blockquote>
<p>为了更好保护用户的隐私及不影响用户体验，Android 将权限划分为<strong>两种</strong>：</p>
</blockquote>
<ul>
<li><strong>Normal Permissions</strong> ，表示正常权限，也就是不涉及用户隐私。这种权限是不需要用户进行授权的，如：手机震动、蓝牙等。</li>
<li><strong>Dangerous Permission</strong> ，表示危险权限，也就是涉及用户隐私。这种权限是需要用户进行授权的，如：访问通讯录、发送短信等。</li>
</ul>
<blockquote>
<p>其中，Dangerous Permission 危险权限又分为几组。那么分组对权限机制的影响有哪些呢？</p>
</blockquote>
<p>假设现在 <strong>A和B是同一组危险权限</strong>。是这样的，当我们的 APP 已被用户授权了 <strong>A 权限</strong>，那么当我们使用到 <strong>B权限</strong> 时，系统会立刻授权，而不需要用户授权。例如：当我们的 APP 已授权了 <code>SEND_SMS</code> 权限时，当我们需要使用到 <code>RECEIVE_SMS</code> 权限时，系统会立刻授权。也就是说，只要同一组中的权限，只要其中有一个有授权，那么其他组员同样也会被授权。</p>
<p><u><em>为了防止后期版本中组权限的改变，强烈建议使用每一个危险权限都进行权限申请。</em></u></p>
<h2 id="Normal-Permissions"><a href="#Normal-Permissions" class="headerlink" title="Normal Permissions"></a>Normal Permissions</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">ACCESS_LOCATION_EXTRA_COMMANDS</div><div class="line">ACCESS_NETWORK_STATE</div><div class="line">ACCESS_NOTIFICATION_POLICY</div><div class="line">ACCESS_WIFI_STATE</div><div class="line">BLUETOOTH</div><div class="line">BLUETOOTH_ADMIN</div><div class="line">BROADCAST_STICKY</div><div class="line">CHANGE_NETWORK_STATE</div><div class="line">CHANGE_WIFI_MULTICAST_STATE</div><div class="line">CHANGE_WIFI_STATE</div><div class="line">DISABLE_KEYGUARD</div><div class="line">EXPAND_STATUS_BAR</div><div class="line">GET_PACKAGE_SIZE</div><div class="line">INSTALL_SHORTCUT</div><div class="line">INTERNET</div><div class="line">KILL_BACKGROUND_PROCESSES</div><div class="line">MODIFY_AUDIO_SETTINGS</div><div class="line">NFC</div><div class="line">READ_SYNC_SETTINGS</div><div class="line">READ_SYNC_STATS</div><div class="line">RECEIVE_BOOT_COMPLETED</div><div class="line">REORDER_TASKS</div><div class="line">REQUEST_INSTALL_PACKAGES</div><div class="line">SET_ALARM</div><div class="line">SET_TIME_ZONE</div><div class="line">SET_WALLPAPER</div><div class="line">SET_WALLPAPER_HINTS</div><div class="line">TRANSMIT_IR</div><div class="line">UNINSTALL_SHORTCUT</div><div class="line">USE_FINGERPRINT</div><div class="line">VIBRATE</div><div class="line">WAKE_LOCK</div><div class="line">WRITE_SYNC_SETTINGS</div></pre></td></tr></table></figure>
<h2 id="Dangerous-Permission"><a href="#Dangerous-Permission" class="headerlink" title="Dangerous Permission"></a>Dangerous Permission</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 联系人</span></div><div class="line">group:android.permission-group.CONTACTS  </div><div class="line">  permission:android.permission.WRITE_CONTACTS</div><div class="line">  permission:android.permission.GET_ACCOUNTS</div><div class="line">  permission:android.permission.READ_CONTACTS</div><div class="line"><span class="comment">// 电话</span></div><div class="line">group:android.permission-group.PHONE</div><div class="line">  permission:android.permission.READ_CALL_LOG</div><div class="line">  permission:android.permission.READ_PHONE_STATE</div><div class="line">  permission:android.permission.CALL_PHONE</div><div class="line">  permission:android.permission.WRITE_CALL_LOG</div><div class="line">  permission:android.permission.USE_SIP</div><div class="line">  permission:android.permission.PROCESS_OUTGOING_CALLS</div><div class="line">  permission:com.android.voicemail.permission.ADD_VOICEMAIL</div><div class="line"><span class="comment">// 日历</span></div><div class="line">group:android.permission-group.CALENDAR</div><div class="line">  permission:android.permission.READ_CALENDAR</div><div class="line">  permission:android.permission.WRITE_CALENDAR</div><div class="line"><span class="comment">// 相机</span></div><div class="line">group:android.permission-group.CAMERA</div><div class="line">  permission:android.permission.CAMERA</div><div class="line"><span class="comment">// 传感器</span></div><div class="line">group:android.permission-group.SENSORS</div><div class="line">  permission:android.permission.BODY_SENSORS</div><div class="line"><span class="comment">// 位置</span></div><div class="line">group:android.permission-group.LOCATION</div><div class="line">  permission:android.permission.ACCESS_FINE_LOCATION</div><div class="line">  permission:android.permission.ACCESS_COARSE_LOCATION</div><div class="line"><span class="comment">// 存储</span></div><div class="line">group:android.permission-group.STORAGE</div><div class="line">  permission:android.permission.READ_EXTERNAL_STORAGE</div><div class="line">  permission:android.permission.WRITE_EXTERNAL_STORAGE</div><div class="line"><span class="comment">// 麦克风</span></div><div class="line">group:android.permission-group.MICROPHONE</div><div class="line">  permission:android.permission.RECORD_AUDIO</div><div class="line"><span class="comment">// 短信</span></div><div class="line">group:android.permission-group.SMS</div><div class="line">  permission:android.permission.READ_SMS</div><div class="line">  permission:android.permission.RECEIVE_WAP_PUSH</div><div class="line">  permission:android.permission.RECEIVE_MMS</div><div class="line">  permission:android.permission.RECEIVE_SMS</div><div class="line">  permission:android.permission.SEND_SMS</div><div class="line">  permission:android.permission.READ_CELL_BROADCASTS</div></pre></td></tr></table></figure>
<hr>
<h1 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h1><p>在学习之前，一直听说 Android 6.0 换了新的权限机制，使用起来很麻烦。现在学了之后感觉只是在使用权限之前加了一层判断，繁琐点。不多说了，开始吧。</p>
<ol>
<li><p>跟之前一样，在 <code>AndroidManifest</code> 清单文件中，添加需要的权限。</p>
<blockquote>
<p>试图申请一个没有声明的权限，可能会导致程序崩溃。</p>
</blockquote>
</li>
<li><p>核实是否已授权权限</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 例如：核实是否拥有发送短信的权限</span></div><div class="line"><span class="keyword">if</span> (ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,</div><div class="line">            Manifest.permission.SEND_SMS)</div><div class="line">        != PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">    <span class="comment">// 需要申请授权</span></div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="comment">// 表示已授权</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>PS：核实的权限的 API ：</p>
<p><code>ContextCompat.checkSelfPermission(@NonNull Context context, @NonNull String permission)；</code> </p>
<p>翻看源码可看到，此方法有两个返回：</p>
<ul>
<li>PackageManager.PERMISSION_DENIED，值为 <strong>-1</strong>，表示需要申请授权</li>
<li>PackageManager.PERMISSION_GRANTED，值为 <strong>0</strong>，表示已授权</li>
</ul>
</li>
<li><p>申请授权</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,</div><div class="line">        <span class="keyword">new</span> String[]&#123;Manifest.permission.SEND_SMS&#125;,</div><div class="line">        MY_PERMISSIONS_REQUEST_SEND_SMS);</div></pre></td></tr></table></figure>
<p>PS：申请权限的 API：</p>
<p><code>ActivityCompat.requestPermissions(final @NonNull Activity activity, final @NonNull String[] permissions, final int requestCode)</code> </p>
<p>参数说明：</p>
<ul>
<li>第一个：Context</li>
<li>第二个：需要申请的权限字符串数组 [说明可以同时申请多个权限，但系统会通过对话框逐一询问用户是否授权]</li>
<li>第三个：申请返回的请求码</li>
</ul>
</li>
<li><p>处理权限申请回调：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode,</span></span></div><div class="line">                             @NonNull String[] permissions,</div><div class="line">                             @NonNull <span class="keyword">int</span>[] grantResults) &#123;</div><div class="line">    <span class="keyword">switch</span> (requestCode) &#123;</div><div class="line">        <span class="keyword">case</span> MY_PERMISSIONS_REQUEST_SEND_SMS: &#123;</div><div class="line">            <span class="keyword">if</span> (grantResults.length &gt; <span class="number">0</span></div><div class="line">                    &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">                <span class="comment">// 拥有权限</span></div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">// 当弹出的申请权限申请提示框被拒绝时的逻辑             </span></div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>执行申请回调后，首先是通过 <code>requestCode</code> 找到到你的申请，然后进行验证 <code>grantResults</code> 对应的申请结果，这个数组对应了申请时的权限数组，你同时申请几个权限，<code>grantResults</code> 的长度就为多少，其分别记录了每个权限的申请结果。也就是说，当你申请成功时，你就可进行下一步的逻辑。</p>
</li>
</ol>
<hr>
<p>还有一个很重要的 API 需要介绍：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (ActivityCompat.shouldShowRequestPermissionRationale(thisActivity,</div><div class="line">        Manifest.permission.READ_CONTACTS)) </div><div class="line">	<span class="comment">// 向用户解释为何申请该权限</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<h1 id="发送短信-的例子"><a href="#发送短信-的例子" class="headerlink" title="[发送短信]的例子"></a>[发送短信]的例子</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 用于申请权限后的回调</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MY_PERMISSIONS_REQUEST_SEND_SMS = <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> EditText mEdNumber;</div><div class="line">    <span class="keyword">private</span> EditText mEdContent;</div><div class="line">    <span class="keyword">private</span> Button   mBtnSend;</div><div class="line">    <span class="keyword">private</span> String   mNumber;</div><div class="line">    <span class="keyword">private</span> String   mContent;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        initViews();</div><div class="line">        initData();</div><div class="line">        initListener();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initListener</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 点击后,发送短信</span></div><div class="line">        mBtnSend.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">                <span class="keyword">if</span> (ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,</div><div class="line">                        Manifest.permission.SEND_SMS)</div><div class="line">                        != PackageManager.PERMISSION_GRANTED) &#123; <span class="comment">// 表示不同意,需要申请授权</span></div><div class="line"></div><div class="line">                    ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,</div><div class="line">                            <span class="keyword">new</span> String[]&#123;Manifest.permission.SEND_SMS&#125;,</div><div class="line">                            MY_PERMISSIONS_REQUEST_SEND_SMS);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="comment">// 发送短信</span></div><div class="line">                    sendSms(mNumber, mContent);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</div><div class="line">        mNumber = mEdNumber.getText().toString().trim();</div><div class="line">        mContent = mEdContent.getText().toString().trim();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line">        mEdNumber = (EditText) findViewById(R.id.ed_number);</div><div class="line">        mEdContent = (EditText) findViewById(R.id.ed_content);</div><div class="line">        mBtnSend = (Button) findViewById(R.id.btn_send);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 发送短信</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> number  手机号码</div><div class="line">     * <span class="doctag">@param</span> content 短信内容</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sendSms</span><span class="params">(String number, String content)</span> </span>&#123;</div><div class="line">        <span class="comment">// 获取短信管理器</span></div><div class="line">        SmsManager smsManager = SmsManager.getDefault();</div><div class="line"></div><div class="line">        <span class="comment">// 拆分短信内容（手机短信内容长度不能超过70字）</span></div><div class="line">        ArrayList&lt;String&gt; divideMessages = smsManager.divideMessage(content);</div><div class="line">        <span class="keyword">for</span> (String mes : divideMessages) &#123;</div><div class="line">            smsManager.sendTextMessage(number, <span class="keyword">null</span>, mes, <span class="keyword">null</span>, <span class="keyword">null</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode,</span></span></div><div class="line">                                           @NonNull String[] permissions,</div><div class="line">                                           @NonNull <span class="keyword">int</span>[] grantResults) &#123;</div><div class="line">        <span class="keyword">switch</span> (requestCode) &#123;</div><div class="line">            <span class="keyword">case</span> MY_PERMISSIONS_REQUEST_SEND_SMS: &#123;</div><div class="line">                <span class="keyword">if</span> (grantResults.length &gt; <span class="number">0</span></div><div class="line">                        &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">                    <span class="comment">// 拥有权限,直接发送</span></div><div class="line">                    sendSms(mNumber, mContent);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="comment">// 当弹出的申请权限申请提示框被拒绝时的逻辑</span></div><div class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"拒绝了发送短信的权限"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>需要注意：</p>
<ul>
<li>并非所有的通过Intent的方式都不需要申请权限。一般情况下，你是通过Intent打开另一个app，让用户通过该app去做一些事情，你只关注结果（onActivityResult），那么权限是不需要你处理的，而是由打开的app去处理。更多请参考 <a href="http://developer.android.com/intl/zh-cn/training/permissions/best-practices.html#perms-vs-intents" target="_blank" rel="external">Consider Using an Intent</a>。</li>
</ul>
<hr>
<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/cnLGMing/AndroidDemo/tree/master/AndroidNewPermission" target="_blank" rel="external">Github 传送门</a></p>
<hr>
<p><strong>参考博文：</strong><br><a href="http://blog.csdn.net/lmj623565791/article/details/50709663" target="_blank" rel="external">鸿洋- Android 6.0 运行时权限处理完全解析</a></p>
<hr>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SnackBar的使用及封装]]></title>
      <url>http://yoursite.com/2016/06/20/SnackBar%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8F%8A%E5%B0%81%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>SnackBar<br><a id="more"></a></p>
<h3 id="SnackBar-的简述"><a href="#SnackBar-的简述" class="headerlink" title="SnackBar 的简述"></a>SnackBar 的简述</h3><p>Snackbar 是 Android Support Design Library 库中的一个控件。</p>
<p><strong>优势：</strong></p>
<ul>
<li>通常在屏幕底部快速弹出消息(位置取决于容纳 SnackBar 控件的位置)</li>
<li>比 Toast 更加好用</li>
<li>比 Dialog 更轻量级</li>
<li>可与用户进行简单的交互</li>
<li>可滑动删除</li>
</ul>
<hr>
<h3 id="SnackBar-的基本使用"><a href="#SnackBar-的基本使用" class="headerlink" title="SnackBar 的基本使用"></a>SnackBar 的基本使用</h3><p>在使用 SnackBar 之前，需要导入 <code>com.android.support:design</code> 库：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile 'com.android.support:design:23.3.0'</div></pre></td></tr></table></figure></p>
<p><strong>PS：</strong>需要一个控件容器来容纳 SnackBar 。Google 推荐使用 CoordinatorLayout 来作为 SnackBar 的容器。在 SnackBar 的源码中是这样解释的：<br><img src="https://ooo.0o0.ooo/2016/06/03/57511fe75d163.png" alt=""></p>
<blockquote>
<p>CoordinatorLayout 也是 Android Support Design Library 库中的一个控件。CoordinatorLayout 使用新的思路通过协调调度子布局的形式实现触摸影响布局的形式产生动画效果。其有两个功能： 作为顶层布局；调度协调子布局。</p>
</blockquote>
<ul>
<li><p>最简单的 SnackBar 使用方式与 Toast 十分相似。</p>
<ul>
<li>图例：</li>
</ul>
<p><img src="https://ooo.0o0.ooo/2016/06/03/57511e3cb5619.png" alt=""></p>
<ul>
<li>使用方式：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">  * 用于创建SnackBar </div><div class="line">  * <span class="doctag">@param</span> view  容纳SnackBar的父容器 </div><div class="line">  * <span class="doctag">@param</span> text  显示在左边的Message</div><div class="line">  * <span class="doctag">@param</span> duration  持续时间：Snackbar.LENGTH_SHORT或LENGTH_LONG </div><div class="line">  */</div><div class="line">Snackbar.make(View view,CharSequence text,<span class="keyword">int</span> duration).show(); <span class="comment">// 显示</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>右侧还有按钮的 SnackBar </p>
<ul>
<li>图例：</li>
</ul>
<p><img src="https://ooo.0o0.ooo/2016/06/03/5751414278108.gif" alt=""></p>
<ul>
<li>使用方式：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">Snackbar.make(View view,CharSequence text,<span class="keyword">int</span> duration)</div><div class="line">		<span class="comment">/**</span></div><div class="line">		 * 设置 SnackBar 右侧的按钮</div><div class="line">		 * <span class="doctag">@param</span> text 按钮名字</div><div class="line">		 * <span class="doctag">@param</span> listener 点击监听事件</div><div class="line">		 */</div><div class="line">		.setAction(CharSequence text,<span class="keyword">new</span> View.OnClickListener()&#123;</div><div class="line">		 	<span class="meta">@Override</span></div><div class="line">		 	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">		 	  <span class="comment">// 点击 SnackBar 右侧按钮后的逻辑</span></div><div class="line">		 	&#125;</div><div class="line">		&#125;)</div><div class="line">		.show();	<span class="comment">// 显示</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>若想在 SnackBar 出现或消失时，做其他逻辑，可以使用其Callback方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Snackbar.make(View view,CharSequence text,<span class="keyword">int</span> duration)</div><div class="line">  		.setCallback(<span class="keyword">new</span> Snackbar.Callback() &#123;</div><div class="line">  		  <span class="meta">@Override</span></div><div class="line">  		  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDismissed</span><span class="params">(Snackbar snackbar, <span class="keyword">int</span> event)</span> </span>&#123;</div><div class="line">  		    <span class="keyword">super</span>.onDismissed(snackbar, event);</div><div class="line">  		    <span class="comment">// 消失时</span></div><div class="line">  		  &#125;</div><div class="line">  		  <span class="meta">@Override</span></div><div class="line">  		  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onShown</span><span class="params">(Snackbar snackbar)</span> </span>&#123;</div><div class="line">  		    <span class="keyword">super</span>.onShown(snackbar);</div><div class="line">  		    <span class="comment">// 出现时</span></div><div class="line">  		  &#125;</div><div class="line">  		&#125;)</div><div class="line">  		.show();	<span class="comment">// 显示</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="SnackBar-的颜色改造"><a href="#SnackBar-的颜色改造" class="headerlink" title="SnackBar 的颜色改造"></a>SnackBar 的颜色改造</h3><p>在使用 SnackBar 过程中，会发现 SnackBar 和 Toast 都是样式过于单一。然而开发过程中，对不同的信息往往需要使用不同的颜色进行区分，引起用户的注意。Android 只提供了修改 Action 文字颜色的方法<code>setActionTextColor()</code> ，显然是不够的。那么只能我们自己阅读源码后，自行添加了。<br>阅读源码后，有所发现：</p>
<ul>
<li><p>SnackBar 中定义了一个内部类 <code>SnackbarLayout</code> ，且这个内部类是继承 <code>LinearLayout</code> 的；</p>
</li>
<li><p>SnackbarLayout 中加载了 <code>R.layout.design_layout_snackbar_include</code>，那意味着 SnackBar 的布局时是有 SnackbarLayout 决定的。<br><code>R.layout.design_layout_snackbar_include</code> 布局文件的代码：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">merge</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/snackbar_text"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">            <span class="attr">android:paddingTop</span>=<span class="string">"14dp"</span></div><div class="line">            <span class="attr">android:paddingBottom</span>=<span class="string">"14dp"</span></div><div class="line">            <span class="attr">android:paddingLeft</span>=<span class="string">"12dp"</span></div><div class="line">            <span class="attr">android:paddingRight</span>=<span class="string">"12dp"</span></div><div class="line">            <span class="attr">android:textAppearance</span>=<span class="string">"@style/TextAppearance.Design.Snackbar.Message"</span></div><div class="line">            <span class="attr">android:maxLines</span>=<span class="string">"1"</span></div><div class="line">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_vertical|left|start"</span></div><div class="line">            <span class="attr">android:ellipsize</span>=<span class="string">"end"</span></div><div class="line">            <span class="attr">android:textAlignment</span>=<span class="string">"viewStart"</span>/&gt;</div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">          <span class="attr">android:id</span>=<span class="string">"@+id/snackbar_action"</span></div><div class="line">          <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">          <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">          <span class="attr">android:layout_marginLeft</span>=<span class="string">"0dp"</span></div><div class="line">          <span class="attr">android:layout_marginStart</span>=<span class="string">"0dp"</span></div><div class="line">          <span class="attr">android:layout_gravity</span>=<span class="string">"center_vertical|right|end"</span></div><div class="line">          <span class="attr">android:paddingTop</span>=<span class="string">"14dp"</span></div><div class="line">          <span class="attr">android:paddingBottom</span>=<span class="string">"14dp"</span></div><div class="line">          <span class="attr">android:paddingLeft</span>=<span class="string">"12dp"</span></div><div class="line">          <span class="attr">android:paddingRight</span>=<span class="string">"12dp"</span></div><div class="line">          <span class="attr">android:visibility</span>=<span class="string">"gone"</span> // 注意到没? 当设置了<span class="attr">SnackBar</span>有按钮时才会显示</div><div class="line">          <span class="attr">android:textColor</span>=<span class="string">"?attr/colorAccent"</span></div><div class="line">          <span class="attr">style</span>=<span class="string">"?attr/borderlessButtonStyle"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">merge</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>了解到这个后，设置消息和 SnackBar 的背景颜色就是很简单了。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 设置 SnackBar 的颜色</div><div class="line"> * 因为 Action 已有设置的方法，所以这里只需设置消息和背景的颜色</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> snackbar        SnackBar实例</div><div class="line"> * <span class="doctag">@param</span> messageColor    消息的颜色</div><div class="line"> * <span class="doctag">@param</span> backgroundColor 背景颜色</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setSnackbarColor</span><span class="params">(Snackbar snackbar, <span class="keyword">int</span> messageColor, </span></span></div><div class="line">                                    <span class="keyword">int</span> backgroundColor) &#123;</div><div class="line">	<span class="comment">/** 获取Snackbar的view */</span></div><div class="line">	View view = snackbar.getView();</div><div class="line">	<span class="keyword">if</span> (view != <span class="keyword">null</span>) &#123;</div><div class="line">		<span class="comment">// 修改view的背景色</span></div><div class="line">		view.setBackgroundColor(backgroundColor);</div><div class="line">		<span class="comment">// 获取Snackbar的message控件，修改字体颜色</span></div><div class="line">		((TextView)view.findViewById(R.id.snackbar_text))</div><div class="line">						.setTextColor(messageColor);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="SnackBar-的布局改造"><a href="#SnackBar-的布局改造" class="headerlink" title="SnackBar 的布局改造"></a>SnackBar 的布局改造</h3><blockquote>
<p>Google 在 Material Design 设计规范中提到：当有2个或者2个以上的操作出现时，应该使用提示框而不是 Snackbar，即使其中的一个是取消操作。如果 Snackbar 中提示的操作重要到需要打断屏幕上正在进行的操作，那么理当使用提示框而非 Snackbar。</p>
</blockquote>
<p>　　但有时候我们接到的需求是要在 SnackBar 添加其他布局，怎么办呢？（我很想遵循官方的设计规范，但却因生活压力被迫接受那些奇葩的需求）</p>
<p>　　这个时候，我们应该想到刚刚提到的，SnackBar 的布局是由 SnackbarLayout 决定的。那我们可以直接新建一个布局，然后添加进去就可以了嘛。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 为SnackBar添加布局</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> snackbar SnackBar实例</div><div class="line"> * <span class="doctag">@param</span> layoutId 布局文件</div><div class="line"> * <span class="doctag">@param</span> index    位置</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addViewToSnackbar</span><span class="params">(Snackbar snackbar, <span class="keyword">int</span> layoutId, <span class="keyword">int</span> index)</span> </span>&#123;</div><div class="line">	<span class="comment">/** 获取snackbar的View(其实就是SnackbarLayout) */</span></div><div class="line">	View snackbarview = snackbar.getView();</div><div class="line">	Snackbar.SnackbarLayout snackbarLayout = (Snackbar.SnackbarLayout) snackbarview;</div><div class="line"></div><div class="line">	View add_view = LayoutInflater.from(snackbarview.getContext())</div><div class="line">　　　　　　　　　　　　　　　　　　　.inflate(layoutId, <span class="keyword">null</span>);   <span class="comment">//加载布局文件新建View</span></div><div class="line">	<span class="comment">// 设置新建布局参数</span></div><div class="line">	LinearLayout.LayoutParams p = <span class="keyword">new</span> LinearLayout.LayoutParams(</div><div class="line">　　　　　　　　　　　　　　　　　　　　　　　LinearLayout.LayoutParams.WRAP_CONTENT,</div><div class="line">　　　　　　　　　　　　　　　　　　　　　　　LinearLayout.LayoutParams.WRAP_CONTENT);</div><div class="line">	<span class="comment">// 设置新建布局在Snackbar内垂直居中显示</span></div><div class="line">	p.gravity = Gravity.CENTER_VERTICAL;</div><div class="line">	<span class="comment">// 将新建布局添加进snackbarLayout相应位置</span></div><div class="line">	snackbarLayout.addView(add_view, index, p);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>使用示例：</strong><br>新建一个布局文件：（直接一个ImageView，并设置为默认图标）<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">              <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">              <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">              <span class="attr">android:layout_gravity</span>=<span class="string">"center_vertical"</span>&gt;</div><div class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">           <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">           <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">           <span class="attr">android:layout_gravity</span>=<span class="string">"center_vertical"</span></div><div class="line">           <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong>Java文件中运用：</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Snackbar snackbar = Snackbar.make(mContainer, <span class="string">"这是普通 SnackBar"</span>,Snackbar.LENGTH_SHORT);</div><div class="line">setSnackbarColor(snackbar, Color.RED, Color.BLUE);</div><div class="line">addViewToSnackbar(snackbar, R.layout.snackbar_image, <span class="number">0</span>);</div><div class="line">snackbar.show();</div></pre></td></tr></table></figure></p>
<p><strong>运行后示例：</strong><br><img src="https://ooo.0o0.ooo/2016/06/03/575140ef20ce7.gif" alt=""></p>
<h3 id="SnackBar-封装"><a href="#SnackBar-封装" class="headerlink" title="SnackBar 封装"></a>SnackBar 封装</h3><p>为了更方便、灵活的使用 SnackBar，对 SnackBar 进行封装。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.graphics.Color;</div><div class="line"><span class="keyword">import</span> android.support.design.widget.Snackbar;</div><div class="line"><span class="keyword">import</span> android.view.Gravity;</div><div class="line"><span class="keyword">import</span> android.view.LayoutInflater;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.LinearLayout;</div><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * @创建者 　　　　cnLGMing</div><div class="line"> * @创建时间 　　　2016-6-3 16:35</div><div class="line"> * @描述 　　　　　对SnackBar进行封装</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SnackBarUtils</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> INFO    = <span class="number">1</span>;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CONFIRM = <span class="number">2</span>;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WARNING = <span class="number">3</span>;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ALERT   = <span class="number">4</span>;</div><div class="line"></div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> red    = <span class="number">0xfff44336</span>;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> green  = <span class="number">0xff4caf50</span>;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> blue   = <span class="number">0xff2195f3</span>;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> orange = <span class="number">0xffffc107</span>;</div><div class="line"></div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">     * Snackbar：自定义颜色的短显示</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> view</div><div class="line">     * <span class="doctag">@param</span> message</div><div class="line">     * <span class="doctag">@param</span> messageColor</div><div class="line">     * <span class="doctag">@param</span> backgroundColor</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Snackbar <span class="title">shortSnackbar</span><span class="params">(View view, String message, </span></span></div><div class="line">                                       <span class="keyword">int</span> messageColor,<span class="keyword">int</span> backgroundColor) &#123;</div><div class="line">    Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);</div><div class="line">    setSnackBarColor(snackbar, messageColor, backgroundColor);</div><div class="line">    <span class="keyword">return</span> snackbar;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">     * Snackbar：自定义颜色的长显示</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> view</div><div class="line">     * <span class="doctag">@param</span> message</div><div class="line">     * <span class="doctag">@param</span> messageColor</div><div class="line">     * <span class="doctag">@param</span> backgroundColor</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Snackbar <span class="title">longSnackbar</span><span class="params">(View view, String message, <span class="keyword">int</span> messageColor,</span></span></div><div class="line">                                      <span class="keyword">int</span> backgroundColor) &#123;</div><div class="line">    Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);</div><div class="line">    setSnackBarColor(snackbar, messageColor, backgroundColor);</div><div class="line">    <span class="keyword">return</span> snackbar;</div><div class="line">  &#125;</div><div class="line"></div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">     * 短显示Snackbar，可选预设类型</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> view</div><div class="line">     * <span class="doctag">@param</span> message</div><div class="line">     * <span class="doctag">@param</span> type</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Snackbar <span class="title">shortSnackbar</span><span class="params">(View view, String message, <span class="keyword">int</span> type)</span> </span>&#123;</div><div class="line">    Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);</div><div class="line">    switchType(snackbar, type);</div><div class="line">    <span class="keyword">return</span> snackbar;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">     * 长显示Snackbar，可选预设类型</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> view</div><div class="line">     * <span class="doctag">@param</span> message</div><div class="line">     * <span class="doctag">@param</span> type</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Snackbar <span class="title">longSnackbar</span><span class="params">(View view, String message, <span class="keyword">int</span> type)</span> </span>&#123;</div><div class="line">    Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);</div><div class="line">    switchType(snackbar, type);</div><div class="line">    <span class="keyword">return</span> snackbar;</div><div class="line">  &#125;</div><div class="line"></div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">     * 自定义时常显示Snackbar，自定义颜色</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> view</div><div class="line">     * <span class="doctag">@param</span> message</div><div class="line">     * <span class="doctag">@param</span> messageColor</div><div class="line">     * <span class="doctag">@param</span> backgroundColor</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Snackbar <span class="title">IndefiniteSnackbar</span><span class="params">(View view, String message, <span class="keyword">int</span> duration,</span></span></div><div class="line">                                            <span class="keyword">int</span> messageColor, <span class="keyword">int</span> backgroundColor) &#123;</div><div class="line">    Snackbar snackbar = Snackbar</div><div class="line">      .make(view, message, Snackbar.LENGTH_INDEFINITE)</div><div class="line">      .setDuration(duration);</div><div class="line">    setSnackBarColor(snackbar, messageColor, backgroundColor);</div><div class="line">    <span class="keyword">return</span> snackbar;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">     * 自定义时常显示Snackbar，可选预设类型</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> view</div><div class="line">     * <span class="doctag">@param</span> message</div><div class="line">     * <span class="doctag">@param</span> type</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Snackbar <span class="title">IndefiniteSnackbar</span><span class="params">(View view, String message, <span class="keyword">int</span> duration, </span></span></div><div class="line">                                            <span class="keyword">int</span> type) &#123;</div><div class="line">    Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE)</div><div class="line">      .setDuration(duration);</div><div class="line">    switchType(snackbar, type);</div><div class="line">    <span class="keyword">return</span> snackbar;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">     * 设置Snackbar背景颜色</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> snackbar</div><div class="line">     * <span class="doctag">@param</span> backgroundColor</div><div class="line">     */</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setSnackBarColor</span><span class="params">(Snackbar snackbar, <span class="keyword">int</span> backgroundColor)</span> </span>&#123;</div><div class="line">    View view = snackbar.getView();</div><div class="line">    <span class="keyword">if</span> (view != <span class="keyword">null</span>) &#123;</div><div class="line">      view.setBackgroundColor(backgroundColor);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">     * 设置SnackBar消息的颜色</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> snackbar</div><div class="line">     * <span class="doctag">@param</span> messageColor</div><div class="line">     */</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setSnackBarMsgColor</span><span class="params">(Snackbar snackbar, <span class="keyword">int</span> messageColor)</span> </span>&#123;</div><div class="line">    View view = snackbar.getView();</div><div class="line">    <span class="keyword">if</span> (view != <span class="keyword">null</span>) &#123;</div><div class="line">      ((TextView) view.findViewById(R.id.snackbar_text)).setTextColor(messageColor);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">     * 设置Snackbar文字和背景颜色</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> snackbar</div><div class="line">     * <span class="doctag">@param</span> messageColor</div><div class="line">     * <span class="doctag">@param</span> backgroundColor</div><div class="line">     */</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setSnackBarColor</span><span class="params">(Snackbar snackbar, <span class="keyword">int</span> messageColor, </span></span></div><div class="line">                                      <span class="keyword">int</span> backgroundColor) &#123;</div><div class="line">    View view = snackbar.getView();</div><div class="line">    <span class="keyword">if</span> (view != <span class="keyword">null</span>) &#123;</div><div class="line">      view.setBackgroundColor(backgroundColor);</div><div class="line">      ((TextView) view.findViewById(R.id.snackbar_text)).setTextColor(messageColor);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">     * 为SnackBar添加布局</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> snackbar SnackBar实例</div><div class="line">     * <span class="doctag">@param</span> layoutId 布局文件</div><div class="line">     * <span class="doctag">@param</span> index    位置</div><div class="line">     */</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addView</span><span class="params">(Snackbar snackbar, <span class="keyword">int</span> layoutId, <span class="keyword">int</span> index)</span> </span>&#123;</div><div class="line">    <span class="comment">/** 获取snackbar的View(其实就是SnackbarLayout) */</span></div><div class="line">    View snackbarview = snackbar.getView();</div><div class="line">    Snackbar.SnackbarLayout snackbarLayout = (Snackbar.SnackbarLayout) snackbarview;</div><div class="line"></div><div class="line">    View add_view = LayoutInflater.from(snackbarview.getContext())</div><div class="line">                                  .inflate(layoutId, <span class="keyword">null</span>);   <span class="comment">//加载布局文件新建View</span></div><div class="line">    <span class="comment">// 设置新建布局参数</span></div><div class="line">    LinearLayout.LayoutParams p = <span class="keyword">new</span> LinearLayout.LayoutParams(</div><div class="line">                                      LinearLayout.LayoutParams.WRAP_CONTENT,</div><div class="line">                                      LinearLayout.LayoutParams.WRAP_CONTENT);</div><div class="line">    <span class="comment">// 设置新建布局在Snackbar内垂直居中显示</span></div><div class="line">    p.gravity = Gravity.CENTER_VERTICAL;</div><div class="line">    <span class="comment">// 将新建布局添加进snackbarLayout相应位置</span></div><div class="line">    snackbarLayout.addView(add_view, index, p);</div><div class="line">  &#125;</div><div class="line"></div><div class="line"></div><div class="line">  <span class="comment">//选择预设类型</span></div><div class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">switchType</span><span class="params">(Snackbar snackbar, <span class="keyword">int</span> type)</span> </span>&#123;</div><div class="line">    <span class="keyword">switch</span> (type) &#123;</div><div class="line">      <span class="keyword">case</span> INFO:</div><div class="line">        setSnackBarColor(snackbar, blue);</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">      <span class="keyword">case</span> CONFIRM:</div><div class="line">        setSnackBarColor(snackbar, green);</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">      <span class="keyword">case</span> WARNING:</div><div class="line">        setSnackBarColor(snackbar, orange);</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">      <span class="keyword">case</span> ALERT:</div><div class="line">        setSnackBarColor(snackbar, Color.YELLOW, red);</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://github.com/cnLGMing/SnackBarUtils" target="_blank" rel="external">Github 传送门</a></p>
<p><strong>SnackBar</strong> 的使用教程到此结束。</p>
<p><strong>参考博文：</strong><br><a href="http://www.jianshu.com/p/cd1e80e64311" target="_blank" rel="external">没时间解释了，快使用Snackbar</a></p>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[FloatingActionButton的使用]]></title>
      <url>http://yoursite.com/2016/06/18/FloatingActionButton%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p><strong>FloatingActionButton</strong> 同样是 Android 6.0 时推出的新控件，是 Android Support Design Library 库中的一个控件。</p>
<a id="more"></a>
<p>[TOC]</p>
<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p>同样的，我们先来看效果图：</p>
<p><img src="https://ooo.0o0.ooo/2016/06/23/576cb00a99fc1.gif" alt=""></p>
<hr>
<h3 id="Android-API-中的简述"><a href="#Android-API-中的简述" class="headerlink" title="Android API 中的简述"></a>Android API 中的简述</h3><p><a href="https://developer.android.com/reference/android/support/design/widget/FloatingActionButton.html" target="_blank" rel="external">官方介绍说明</a> </p>
<p><img src="https://ooo.0o0.ooo/2016/06/23/576c9aac9b483.png" alt="FloatingActionButton介绍"></p>
<p>从上图可知：</p>
<ol>
<li>FloatingActionButton 是一个悬浮在 UI 上层的一种特殊按钮；</li>
<li>FloatingActionButton 只有两个尺寸，一种是默认的，一种是迷你的；也就是说我们常用的<code>layout_width</code> 和 <code>layout_height</code> 对 FloatingActionButton 是不起作用；</li>
<li>FloatingActionButton 是间接继承 <strong>ImageView</strong> ，所以我们可以通过 <code>setImageDrawable(Drawable)</code> 方法设置其上面的图标</li>
<li>FloatingActionButton 的背景颜色默认是取自主题中的 <code>colorAccent</code> 字段的颜色值；当然，我们可以可以通过 <code>setBackgroundTintList(ColorStateList)</code>  方法进行设置其背景颜色</li>
</ol>
<hr>
<h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ol>
<li><p><strong>导入兼容库</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile 'com.android.support:design:23.3.0'</div></pre></td></tr></table></figure>
</li>
<li><p><strong>布局文件</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/fab_left_top"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_alignParentLeft</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:src</span>=<span class="string">"@drawable/ic_loyalty_white_24dp"</span></div><div class="line">    <span class="attr">app:fabSize</span>=<span class="string">"normal"</span>/&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/fab_right_top"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_alignParentRight</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">app:backgroundTint</span>=<span class="string">"#0268F9"</span></div><div class="line">    <span class="attr">app:elevation</span>=<span class="string">"10dp"</span></div><div class="line">    <span class="attr">app:fabSize</span>=<span class="string">"mini"</span></div><div class="line">    <span class="attr">app:rippleColor</span>=<span class="string">"#0000ff"</span>/&gt;</div></pre></td></tr></table></figure>
</li>
<li><p><strong>Java 代码</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// 为右上角的悬浮按钮设置图标</span></div><div class="line">    mFabRightTop.setImageDrawable(getDrawable(R.drawable.ic_loyalty_white_24dp));</div><div class="line"></div><div class="line">    <span class="comment">// 为左上角的悬浮按钮设置点击监听</span></div><div class="line">    mFabLeftTop.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (mFabRightTop.isShown()) &#123;    <span class="comment">// 右上角的悬浮按钮是否已经显示</span></div><div class="line">                mFabRightTop.hide(); <span class="comment">// 若显示，则隐藏</span></div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                mFabRightTop.show(); <span class="comment">// 否隐藏，则显示</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="comment">// 为右上角的悬浮按钮设置点击监听</span></div><div class="line">    mFabRightTop.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (mFabLeftTop.isShown()) &#123;    <span class="comment">// 左上角的悬浮按钮是否已经显示</span></div><div class="line">                mFabLeftTop.hide(); <span class="comment">// 若显示，则隐藏</span></div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                mFabLeftTop.show(); <span class="comment">// 否隐藏，则显示</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>FloatingActionButton</strong> 的相关属性如下：</p>
<p><strong>在 XML 中常用的属性有：</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">android:src=""			<span class="comment">&lt;!-- 悬浮按钮上的图标 --&gt;</span></div><div class="line">app:backgroundTint=""	<span class="comment">&lt;!-- 背景颜色，默认为 Theme 主题中的 "colorAccent" --&gt;</span></div><div class="line">app:elevation=""		<span class="comment">&lt;!-- 阴影的深度，默认是有阴影的 --&gt;</span></div><div class="line">app:fabSize=""			<span class="comment">&lt;!-- 大小，仅支持两种大小：normal、mini --&gt;</span></div><div class="line">app:rippleColor=""		<span class="comment">&lt;!-- 点击产生的波纹颜色 --&gt;</span></div></pre></td></tr></table></figure>
<p><strong>在 Java 代码中常用的属性有：</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">setBackgroundDrawable(Drawable background);	<span class="comment">// 图标</span></div><div class="line">setOnClickListener(OnClickListener l);		<span class="comment">// 点击监听器</span></div><div class="line">setBackgroundTintList(ColorStateList tint);	<span class="comment">// 背景颜色</span></div><div class="line">setElevation(<span class="keyword">float</span> elevation);				<span class="comment">// 阴影的深度</span></div><div class="line">setRippleColor(<span class="keyword">int</span> color);					<span class="comment">// 点击产生的波纹颜色</span></div></pre></td></tr></table></figure>
<h3 id="源码中的默认参数"><a href="#源码中的默认参数" class="headerlink" title="源码中的默认参数"></a>源码中的默认参数</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"design_fab_elevation"</span>&gt;</span>6dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span>		<span class="comment">&lt;!-- 默认阴影深度6dp --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"design_fab_image_size"</span>&gt;</span>24dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span>	<span class="comment">&lt;!-- 默认图标大小24dp --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"design_fab_size_mini"</span>&gt;</span>40dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span>		<span class="comment">&lt;!-- mini的悬浮按钮大小40dp --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dimen</span> <span class="attr">name</span>=<span class="string">"design_fab_size_normal"</span>&gt;</span>56dp<span class="tag">&lt;/<span class="name">dimen</span>&gt;</span>	<span class="comment">&lt;!-- 默认的悬浮按钮大小56dp --&gt;</span></div></pre></td></tr></table></figure>
<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://github.com/cnLGMing/AndroidDemo/tree/master/FloatingActionButton_Demo" target="_blank" rel="external">GitHub 传送门</a></p>
<p><strong>FloatingActionButton</strong> 的基础使用教程到此结束了。</p>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@ cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/ cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[TextInputLayout的使用]]></title>
      <url>http://yoursite.com/2016/06/15/TextInputLayout%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>接下来这几篇博客，我将学习 Android 5.0 以及 6.0 的一些新控件。每个新控件一篇博客，能拓展的，我也会学习如何扩展。学习完后，我将综合到一个案例中。</p>
<a id="more"></a>
<p><strong>TextInputLayout</strong> 是 Android 6.0 时推出的新控件，是 Android Support Design Library 库中的一个控件。</p>
<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p>什么也别说，没看到效果图，没有看下去的欲望。那行，先来看效果图：</p>
<p><img src="https://ooo.0o0.ooo/2016/06/23/576ba5b535d85.gif" alt=""></p>
<hr>
<h3 id="Android-API-中的简述"><a href="#Android-API-中的简述" class="headerlink" title="Android API 中的简述"></a>Android API 中的简述</h3><p><a href="https://developer.android.com/reference/android/support/design/widget/TextInputLayout.html" target="_blank" rel="external">官方介绍说明</a> </p>
<p><img src="https://ooo.0o0.ooo/2016/06/23/576b8d6771020.png" alt="TextInputLayout介绍"></p>
<p>从上图可知：</p>
<ol>
<li>TextInputLayout 是继承 <strong>LinearLayout</strong> ；</li>
<li>当被 TextInputLayout 包裹的 EditText 有 hint 提示，输入框中无内容 ，且获得焦点时，hint 将会浮到输入框的上面；</li>
<li>其是与 <code>EditText</code> 或 <code>EditText的子类</code> 进行搭配使用的，也就是说单独使用 TextInputLayout 是没有任何意义的；</li>
<li>同样的，TextInputLayout 也支持错误提示。</li>
</ol>
<hr>
<h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ol>
<li><p><strong>导入兼容库</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile 'com.android.support:design:23.3.0'</div></pre></td></tr></table></figure>
</li>
<li><p><strong>布局文件</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.TextInputLayout</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/til_username"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/et_username"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.TextInputLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.TextInputLayout</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/til_password"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.TextInputEditText</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/tiet_password"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.TextInputLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>不知道你有没有注意到，我这里使用的两个输入框是不一样的。一个是我们常见的 <code>EditText</code> ，另一个是 MD 中的输入框 <code>TextInputEditText</code> 。 <strong>TextInputLayout</strong> 中的源码中，是这样解释的：</p>
<p><img src="https://ooo.0o0.ooo/2016/06/23/576bad907782c.png" alt=""></p>
</li>
<li><p><strong>Java 代码</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// 设置TextInputLayout提示信息</span></div><div class="line">    mTilUsername.setHint(<span class="string">"用户名"</span>);</div><div class="line">    mEtUsername.addTextChangedListener(<span class="keyword">new</span> TextWatcher() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> count, <span class="keyword">int</span> after)</span> </span>&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> before, <span class="keyword">int</span> count)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (s.length() &gt; <span class="number">6</span>) &#123;</div><div class="line">                <span class="comment">// 设置TextInputLayout显示错误提示</span></div><div class="line">                mTilUsername.setErrorEnabled(<span class="keyword">true</span>);</div><div class="line">                <span class="comment">// 设置TextInputLayout错误提示消息</span></div><div class="line">                mTilUsername.setError(<span class="string">"用户名不能超过6位！"</span>);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">// 设置TextInputLayout隐藏错误提示</span></div><div class="line">                mTilUsername.setErrorEnabled(<span class="keyword">false</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable s)</span> </span>&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="comment">// 设置TextInputLayout提示信息</span></div><div class="line">    mTilPassword.setHint(<span class="string">"密码"</span>);</div><div class="line">    mTietPassword.addTextChangedListener(<span class="keyword">new</span> TextWatcher() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> count, <span class="keyword">int</span> after)</span> </span>&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> before, <span class="keyword">int</span> count)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (s.length() &gt; <span class="number">6</span>) &#123;</div><div class="line">                <span class="comment">// 设置TextInputEditText的错误提示消息</span></div><div class="line">                mTietPassword.setError(<span class="string">"密码不能超过6位！"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable s)</span> </span>&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>这样，<strong>TextInputLayout</strong> 的使用就算完成了。但是，还有一些属性需要说下。在上面的例子中，我采用的是 Java 代码进行设置的方式进行的，也可以使用在 XML 文件进行相应的设置。</p>
<p><strong>在 XML 中常用的属性有：</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">android:hint="Hint" <span class="comment">&lt;!--设置提示文本--&gt;</span></div><div class="line">app:hintAnimationEnabled="true" ：<span class="comment">&lt;!--设置是否动画显示提示文本--&gt;</span></div><div class="line">app:hintEnabled="true" <span class="comment">&lt;!--设置提示是否可用--&gt;</span></div><div class="line">app:errorEnabled="true" <span class="comment">&lt;!--设置错误提示是否可用--&gt;</span></div></pre></td></tr></table></figure>
<p><strong>在 Java 代码中常用的属性有：</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">setHint();<span class="comment">// 设置提示文本</span></div><div class="line">setHintAnimationEnabled();<span class="comment">// 设置是否动画显示提示文本</span></div><div class="line">setHintEnabled();<span class="comment">// 设置提示是否可用</span></div><div class="line">setErrorEnabled();<span class="comment">// 设置错误提示是否可用</span></div><div class="line">setError();<span class="comment">// 设置错误信息</span></div><div class="line">getEditText();<span class="comment">// 获取 TextInputLayout 中的 EditText</span></div></pre></td></tr></table></figure>
<h3 id="错误消息提示的区别"><a href="#错误消息提示的区别" class="headerlink" title="错误消息提示的区别"></a>错误消息提示的区别</h3><p>上面说到了 TextInputLayout 也支持错误消息提示，那么其与EditText、TextInputEditText 的有什么区别呢？下图就是答案。两者的错误消息提示在呈现方式上是不同的。</p>
<p><img src="https://ooo.0o0.ooo/2016/06/23/576baf630d796.png" alt=""></p>
<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://github.com/cnLGMing/AndroidDemo/tree/master/TextInputLayout_Demo" target="_blank" rel="external">GitHub 传送门</a></p>
<p><strong>TextInputLayout</strong> 的使用教程到此结束了。</p>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Material_Design_设计语言]]></title>
      <url>http://yoursite.com/2016/06/10/Material_Design_%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/</url>
      <content type="html"><![CDATA[<p>Material Design 是Google在Android 5.0时推出的一个全新的设计语言，它的特点就是拟物扁平化。<a id="more"></a></p>
<p>[TOC]</p>
<ul>
<li>Material Design 是谷歌新的设计语言，谷歌希望寄由此来统一各种平台上的用户体验，Material Design 的特点是干净的排版和简单的布局，以此来突出内容。</li>
<li>Material Design 对排版、材质、配色、光效、间距、文字大小、交互方式、动画轨迹都做出了建议，以帮助设计者设计出符合 Material Design 风格的应用。</li>
<li>Material Design 设计语言鼓励大家使用充满活力的鲜艳色彩，并在同一界面建议使用三种色调，并保障有一个强色调，强色一般处于处于视图最底层，例如状态栏或者 actionbar。通过强色调形成鲜明的对比，更容易突出内容的重要性。对于文字色彩的取值，Material Design 建议在浅色背景上采用黑色，在深色背景上采用白色。重要信息和标题采用87%透明度，次要文字采用54%透明度，而更次要的说明文字可以采用26%的透明度。对于想特别突出或者可点击的文字，建议使用强色调。不同层级的视图，可以通过阴影来凸显。对于带有操作且内容突出的区域，可以使用 cardview 进行隔离，对于内容不太重要或者操作比较单一的区域，可以使用分割线进行隔离。</li>
</ul>
<h2 id="Material-Design-的使用"><a href="#Material-Design-的使用" class="headerlink" title="Material Design 的使用"></a>Material Design 的使用</h2><ol>
<li>将应用的 targetSdkVersion 和 minSdkVersion 设置为21(含以上)</li>
<li>在 values 目录下的 style 资源文件中创建一个 style，让其继承自<br><code>android:Theme.Material</code></li>
<li>在AndroidManifest中指定应用的主题或者Activity的主题为我们设定的样式</li>
</ol>
<h2 id="常用的三种配色风格"><a href="#常用的三种配色风格" class="headerlink" title="常用的三种配色风格"></a>常用的三种配色风格</h2><ul>
<li>黑色风格：<code>Theme.Material</code></li>
<li>明亮风格：<code>Theme.Material.Light</code></li>
<li>明亮主题黑色ActionBar：<code>Theme.Material.Light.DarkActionBar</code></li>
</ul>
<h2 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h2><p><img src="http://i.imgur.com/LQ28qXL.png" alt=""></p>
<ol>
<li><code>android:colorPrimaryDark</code> 应用的主要暗色调，statusBarColor默认使用该颜色</li>
<li><code>android:statusBarColor</code> 状态栏颜色，默认使用colorPrimaryDark</li>
<li><code>android:colorPrimary</code> 应用的主要色调，actionBar默认使用该颜色</li>
<li><code>android:windowBackground</code> 窗口背景颜色</li>
<li><code>android:navigationBarColor</code> 底部栏颜色</li>
<li><code>android:colorForeground</code> 应用的前景色，ListView的分割线，switch滑动区默认使用该颜色</li>
<li><code>android:colorBackground</code> 应用的背景色，popMenu的背景默认使用该颜色</li>
<li><code>android:colorAccent</code> 一般控件的选种效果默认采用该颜色</li>
<li><code>android:colorControlNormal</code> 控件的默认色调　</li>
<li><code>android:colorControlHighlight</code> 控件按压时的色调</li>
<li><code>android:colorControlActivated</code> 控件选中时的颜色，默认使用colorAccent</li>
<li><code>android:colorButtonNormal</code> 默认按钮的背景颜色</li>
<li><code>android:textColor</code> Button，textView的文字颜色</li>
<li><code>android:textColorPrimaryDisableOnly</code> RadioButton checkbox等控件的文字</li>
<li><code>android:textColorPrimary</code> 应用的主要文字颜色，actionBar的标题文字默认使用该颜色</li>
</ol>
<blockquote>
<p>主题不仅可以对<code>Application</code>和<code>Activity</code>使用，也可以对某一个控件单使用，或者是在xml布局中给一个根节点控件设置<code>android:theme</code>属性，来修改它和它所有子控件的主题。 如果我们要对特定控件实例做自定义修改，更建议大家可以通过控件自身的API进行设置修改。</p>
</blockquote>
<h2 id="Material-Design兼容性"><a href="#Material-Design兼容性" class="headerlink" title="Material Design兼容性"></a>Material Design兼容性</h2><p>Material Design主题只有在API级别为21以上才可使用，在v7支持库中提供了部分控件的Material Design主题样式，如果想使应用在android的所有版本上都能统一风格，我们可以对控件效果做自定义或者使用一些第三方的兼容包。目前最有效的做法是针对21版本创建value－21资源目录，使用Material Design风格主题，在其他版本使用v7的<code>Theme.AppCompat.Light</code>风格主题。</p>
<blockquote>
<p> <strong>作者简介</strong>：</p>
<p> <strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p> <a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p> <strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p> <strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android中的strings.xml详解]]></title>
      <url>http://yoursite.com/2016/06/03/Android%E4%B8%AD%E7%9A%84strings.xml%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<p>Android 为了让 APP 国际化（更好的在不同语言环境中使用），同时为了方便开发者进行适配多语言，提供了 strings.xml ，并建议开发者在 UI 界面相关的使用到的文本使用 strings.xml ，进行统一处理。尽量避免采用硬编码。strings.xml 除了为了多语言适配，还有其他一些重要的作用。</p>
<a id="more"></a>
<h3 id="基本使用方法"><a href="#基本使用方法" class="headerlink" title="基本使用方法"></a>基本使用方法</h3><p>基本使用的方法，相信在初学 Android 时，就学过，也比较基础，那我在这就一笔带过了。</p>
<p><strong>例如：</strong>需要在界面中显示中文 <strong>“你有多少篇文章？”</strong> </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--在 values 的 strings.xml 中的设置--&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"article_total"</span>&gt;</span>你有多少篇文章？<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 在 java 代码中通过以下代码获取</span></div><div class="line">getResources().getString(R.string.article_total);</div></pre></td></tr></table></figure>
<hr>
<h3 id="国际化（多语言适配）"><a href="#国际化（多语言适配）" class="headerlink" title="国际化（多语言适配）"></a>国际化（多语言适配）</h3><p>现在来说下多语言适配，为了演示，这里只适配英语，其他语言相似。</p>
<p>首先，需要在项目的 <code>res</code> 目录创建适配英语的 values 文件夹，在 Android Studio 中，可以通过以下方式快速创建。</p>
<p><strong>第一步：</strong></p>
<p><img src="https://ooo.0o0.ooo/2016/06/13/575eccbdead81.png" alt="1.png"></p>
<p><strong>第二步：</strong></p>
<p><img src="https://ooo.0o0.ooo/2016/06/13/575eccbc748e8.png" alt="2.png"></p>
<p>当完成上面两个步骤后，在 <code>res</code> 目录下，会生成 <code>values-en</code> 以及 <code>strings.xml</code> （还带国旗，是不是很有心）。</p>
<p><strong>效果图：</strong></p>
<p><img src="https://ooo.0o0.ooo/2016/06/13/575eccbc1567f.png" alt="3.png"></p>
<p><strong>例如：</strong></p>
<p>当需要在中文环境下时，显示 <strong>“你有多少篇文章？”</strong> ；</p>
<p>在英语环境时，显示 <strong>“How many articles do you have ?”</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--在 values 的 strings.xml 中的设置--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"article_total"</span>&gt;</span>你有多少篇文章？<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--在 values-en 的 strings.xml 中的设置--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"article_total"</span>&gt;</span>How many articles do you have ?<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 在 java 代码中通过以下代码获取</span></div><div class="line">getResources().getString(R.string.article_total);</div></pre></td></tr></table></figure>
<p><strong>wiki：</strong></p>
<ol>
<li>在进行多语言适配时，不同 values 中的同一字符串需要设置<strong>相同的 name</strong>；</li>
<li>Android 会自动根据语言环境加载不同的 strings.xml；</li>
<li>若没有找到对应的语言适配的 values 时，系统将加载默认 values 中的 strings.xml</li>
</ol>
<hr>
<h3 id="带参数"><a href="#带参数" class="headerlink" title="带参数"></a>带参数</h3><p>有时字符串会有一部门是相同的，变化的的总是在固定的位置，那么此时，我们可以使用带参数的方法进行配置。</p>
<p>例如：针对上面的<strong>“你有多少篇文章？”</strong>，进行回答：<strong>“我有一篇文章。”</strong> 、<strong>“我有两篇文章。”</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--在 values 的 strings.xml 中的设置--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"my_article_total"</span>&gt;</span>我有%s篇文章。<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"my_article_total_ing"</span>&gt;</span>我有%1$s篇文章，正在写第%2$s篇。<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"one"</span>&gt;</span>一<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"two"</span>&gt;</span>二<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"three"</span>&gt;</span>三<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--在 values-en 的 strings.xml 中的设置--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"my_article_total"</span>&gt;</span>I have %s article.<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"my_article_total_ing"</span>&gt;</span>I have %1$s article. I'm writing %2$s.<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"one"</span>&gt;</span>one<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"two"</span>&gt;</span>two<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"three"</span>&gt;</span>the third<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 在 java 代码中通过以下代码进行获取</span></div><div class="line">getResources().getString(R.string.my_article_total, getString(R.string.one));</div><div class="line">getResources().getString(R.string.my_article_total, getString(R.string.two));</div><div class="line">getResources().getString(R.string.my_article_total_ing, getString(R.string.two), getString(R.string.three));</div></pre></td></tr></table></figure>
<p><strong>效果图：</strong></p>
<p><img src="https://ooo.0o0.ooo/2016/06/18/576577bf789d3.gif" alt="GIF.gif"></p>
<p><strong>wiki：</strong></p>
<ol>
<li>其中 <code>%s</code>  表示字符串，若只有一个参数时，直接使用 <code>%s</code>  即可；若有两个及两个以上时，需要使用编号进行区分，将 <code>%s 修改为 %编号$s</code> ，然后在 java 代码在中，按照编号进行设置即可。</li>
<li>更多参数格式，请参考 <a href="https://developer.android.com/reference/java/util/Formatter.html" target="_blank" rel="external">Formatter的使用方法</a>，</li>
</ol>
<hr>
<h3 id="根据数量，是否为复数，添加-String"><a href="#根据数量，是否为复数，添加-String" class="headerlink" title="根据数量，是否为复数，添加 String"></a>根据数量，是否为复数，添加 String</h3><p>不知道你有没有注意到，当在英文状态下，且数量为复数时，其英语单词还是单数形式，这是不对的。那么需要怎么写呢？接下来，我们就来学习当参数为数量，且需要根据这个参数是单数还是复数，显示对应的单词。</p>
<p>要适配多种语言的复数是比较困难的一件事，所以 Android 已经提供了对应的方法 –&gt; <code>plurals</code> ，使用方法如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--在 values 的 strings.xml 中的设置--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">plurals</span> <span class="attr">name</span>=<span class="string">"article_count"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">quantity</span>=<span class="string">"one"</span>&gt;</span>我有 1 篇文章。<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">quantity</span>=<span class="string">"other"</span>&gt;</span>我有 %d 篇文章。<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plurals</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--在 values-en 的 strings.xml 中的设置--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">plurals</span> <span class="attr">name</span>=<span class="string">"article_count"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">quantity</span>=<span class="string">"one"</span>&gt;</span>I have only one article.<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">quantity</span>=<span class="string">"other"</span>&gt;</span>I have %d articles.<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plurals</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 在 java 代码中通过以下代码进行获取</span></div><div class="line"><span class="keyword">int</span> count = <span class="number">1</span>;</div><div class="line">getResources().getQuantityString(R.plurals.article_count, count, count);</div><div class="line">count = <span class="number">100</span>;</div><div class="line">getResources().getQuantityString(R.plurals.article_count, count, count);</div></pre></td></tr></table></figure>
<p><strong>效果图：</strong></p>
<p><img src="https://ooo.0o0.ooo/2016/06/20/5768ab11ba12c.gif" alt="GIF.gif"></p>
<p><strong>wiki：</strong></p>
<ol>
<li>通过 <a href="https://developer.android.com/guide/topics/resources/string-resource.html#Plurals" target="_blank" rel="external">Android提供的API</a> 可以发现，语言之间的复数是有差异，而且很容易搞混。<code>quantity</code> 中各合法值的解释：<br><img src="https://ooo.0o0.ooo/2016/06/20/5768adb4592bc.png" alt="1.png"></li>
<li>当 <code>item</code> 中有单引号或双引号时，需要进行转义；</li>
<li>当 <code>item</code> 中，包含了数字格式的字符串 <code>%d</code> ,则在获取时需要传递两个参数，如上面的两个 <strong>count</strong> ，第一个 count 用于显示合适的字符串；第二个 count 用于插入到占位符 <code>%d</code> 中。 </li>
</ol>
<hr>
<h3 id="添加特殊符号"><a href="#添加特殊符号" class="headerlink" title="添加特殊符号"></a>添加特殊符号</h3><p>在 <strong>strings.xml</strong> 中，有些字符是不能直接表示出来的。比如：空格。</p>
<p>那么需要的时候怎么使用呢？<strong>使用ASCII 码表示</strong> 。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"space01"</span>&gt;</span> 测试空格 <span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"space02"</span>&gt;</span>&amp;#160;测试空格&amp;#160;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>效果图：</strong></p>
<p><img src="https://ooo.0o0.ooo/2016/06/21/5768dfa81d544.png" alt=""></p>
<p><strong>wiki：</strong></p>
<ol>
<li>当不能直接表示出来时，使用 <strong>ASCII 码</strong> 进行表示。格式：<code>&amp;#ASCII码;</code></li>
<li>当不能直接表示出来时，使用 <strong>Unicode 码</strong> 进行表示。格式：<code>\u码值</code></li>
<li>可以设置<code>formatted=&quot;false&quot;</code></li>
</ol>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"demo1"</span> <span class="attr">formatted</span>=<span class="string">"false"</span>&gt;</span>目前的百分比为10%，预期是20%<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"demo2"</span>&gt;</span>目前的百分比为10&amp;#37;，预期是20&amp;#37;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"demo3"</span>&gt;</span>目前的百分比为10\u0025 ;，预期是20\u0025;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h3 id="使用-HTML-样式"><a href="#使用-HTML-样式" class="headerlink" title="使用 HTML 样式"></a>使用 HTML 样式</h3><p>在某种特定的场景，我们需要强调一些关键字/词，需要进行加粗或颜色修改等操作。这个时候，为了减少控件，使这句话就在同一个 string 中，我们可以使用 HTML 样式对字符串进行修饰。</p>
<ul>
<li>需要显示：<strong><u><em>刘广明</em></u></strong>，下午好！</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"hello"</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>刘广明<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span>, 下午好<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div></pre></td></tr></table></figure>
<p>效果图：</p>
<p><img src="https://ooo.0o0.ooo/2016/06/21/5768e42f8e40a.png" alt=""></p>
<ul>
<li>修改颜色（有两种方法）</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">// 第一种方法：在 Java 代码中直接设置</div><div class="line">mTvHello.setText(Html.fromHtml("<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">'#00ff00'</span>&gt;</span>刘广明<span class="tag">&lt;/<span class="name">font</span>&gt;</span>,下午好！"));</div><div class="line"></div><div class="line">// 第二种方法</div><div class="line"><span class="comment">&lt;!-- 在 strings.xml 中配置 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"hello"</span>&gt;</span></div><div class="line">    &lt;![CDATA[</div><div class="line">        &lt;font color="#0066ff"&gt;&lt;b&gt;刘广明&lt;/b&gt;&lt;/font&gt;</div><div class="line">    ]]&gt;，下午好</div><div class="line"><span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"></div><div class="line">// 在 Java 代码中获取：</div><div class="line">mTvHello.setText(Html.fromHtml(getResources().getString(R.string.hello)));</div></pre></td></tr></table></figure>
<p><strong>效果图：</strong></p>
<p><img src="https://ooo.0o0.ooo/2016/06/21/5768ee79139c5.png" alt=""></p>
<p><strong>wiki：</strong></p>
<ol>
<li>目前 <code>strings.xml</code> 自带的支持：加粗<code>&lt;b&gt;</code>、下划线<code>&lt;u&gt;</code>、斜体<code>&lt;i&gt;</code>这三个标签</li>
</ol>
<hr>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@ cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/ cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[APP版本升级及常见的一些问题]]></title>
      <url>http://yoursite.com/2016/05/16/APP%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>因开发的是公司内部的OA APP，APP没有发布到应用市场，同时也未使用到第三方推送SDK，为了提供后续的版本更新，自己写了版本更新的操作。</p>
<a id="more"></a>
<h1 id="版本更新的两个概念"><a href="#版本更新的两个概念" class="headerlink" title="版本更新的两个概念"></a>版本更新的两个概念</h1><p>关于版本更新，需要知道的两个概念，分别：</p>
<ul>
<li>versionCode：对消费者不可见，仅用于应用市场、程序内部识别版本，判断新旧等用途。</li>
<li>versionName：展示给消费者，消费者会通过它认知自己安装的版本。</li>
</ul>
<h1 id="版本更新的流程图"><a href="#版本更新的流程图" class="headerlink" title="版本更新的流程图"></a>版本更新的流程图</h1><p><strong>以下是我写版本更新时的思路流程图：</strong></p>
<p><img src="https://ooo.0o0.ooo/2016/05/16/5739e15735a60.png" alt="流程图__版本升级.png"></p>
<h1 id="关于开发中版本更新遇到的问题"><a href="#关于开发中版本更新遇到的问题" class="headerlink" title="关于开发中版本更新遇到的问题"></a>关于开发中版本更新遇到的问题</h1><h2 id="发布了一个-versionCode-错误的版本，怎么办"><a href="#发布了一个-versionCode-错误的版本，怎么办" class="headerlink" title="发布了一个 versionCode 错误的版本，怎么办"></a>发布了一个 versionCode 错误的版本，怎么办</h2><p>​    场景：1.0版本的 versionCode 是1；而1.1版本的 versionCode 被误写成了21；但在之后发布的1.2版本仍然使用的是3。</p>
<p>​    那么，带来的问题就是：1.1版本的用户无法升级到1.2版本，因为21&gt;3，在程序看来，1.1的版本反而比1.2的新；以此同时，1.2版本的用户还会收到提示更新到1.1，导致回滚到旧版本，这种体验是极差的。</p>
<p>​    所以，当我遇到这样的情况时，我是在新版本将 versionCode 直接跳到30，重新开始的。</p>
<h2 id="发出去的应用有-Bug-，怎么办"><a href="#发出去的应用有-Bug-，怎么办" class="headerlink" title="发出去的应用有 Bug ，怎么办"></a>发出去的应用有 Bug ，怎么办</h2><p>我的做法是分为两种情况：</p>
<ol>
<li>当 bug 无法再短时间内解决时，直接将之前的旧版本的 versionCode 改大点，提交新版本，供用户下载。</li>
<li>bug 可以短时间内解决时，赶紧修复 bug ，加 VersionCode，发布新版本</li>
</ol>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@ cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/ cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[常用的正则表达式]]></title>
      <url>http://yoursite.com/2016/05/11/%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>正则表达式可以迅速地用极简单的方式达到字符串的复杂控制。<strong>为了避免重复造轮子，此文将用于记录常用的正则表达式</strong>。<br><a id="more"></a></p>
<blockquote>
<p><u><strong>文中所列正则表达式，均有优化之处。若您有更优的，欢迎讨论。同时，也欢迎提供其他常用正则。谢谢~~~</strong></u></p>
</blockquote>
<ul>
<li><p>邮箱：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">String regex = <span class="string">"\\w+@\\w+\\.[a-z]+(\\.[a-z]+)?"</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>手机号码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">String regex = <span class="string">"(\\+\\d+)?1(3[0-9]|4[57]|5[0-35-9]|8[0-9]|70)\\d&#123;8&#125;$"</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>ip 地址：(粗略匹配，有待优化)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">String regex = <span class="string">"[1-9](\\d&#123;1,2&#125;)?\\.(0|([1-9](\\d&#123;1,2&#125;)?))\\.)&#123;2&#125;(0|([1-9](\\d&#123;1,2&#125;)?))"</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>身份证号码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">String regex = <span class="string">"[1-9]\\d&#123;13,16&#125;[a-zA-Z0-9]&#123;1&#125;"</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>固定电话号码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">String regex = <span class="string">"(\\+\\d+)?(\\d&#123;3,4&#125;\\-?)?\\d&#123;7,8&#125;$"</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>中国邮编</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">String regex = <span class="string">"[1-9]\\d&#123;5&#125;"</span>;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>在 Java 中，使用正则进行匹配，有两种常用方法：</p>
<ul>
<li><p>第一种：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Pattern p = Pattern.compile(<span class="string">"正则表达式"</span>);</div><div class="line">Matcher m = p.matcher(<span class="string">"需要匹配的字符(串)"</span>);</div><div class="line"><span class="keyword">boolean</span> b = m.matches();</div><div class="line"></div><div class="line"><span class="comment">// 也可直接写成链式</span></div><div class="line"><span class="keyword">boolean</span> b = Pattern.compile(<span class="string">"正则表达式"</span>).matcher(<span class="string">"需要匹配的字符(串)"</span>).matches();</div></pre></td></tr></table></figure>
</li>
<li><p>第二种：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">boolean</span> b = Pattern.matches(<span class="string">"正则表达式"</span>, <span class="string">"需要匹配的字符(串)"</span>);</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p><strong>作者简介：</strong></p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试_02]]></title>
      <url>http://yoursite.com/2016/02/26/%E9%9D%A2%E8%AF%95_02/</url>
      <content type="html"><![CDATA[<p>第二次面试Android开发工程师<br><a id="more"></a></p>
<ul>
<li>公司：深圳活动家网络科技有限公司</li>
<li>职位：Android 游戏开发工程师</li>
<li>时间：2016/02/26 14:30</li>
</ul>
<h1 id="笔试"><a href="#笔试" class="headerlink" title="笔试"></a>笔试</h1><ul>
<li>res目录下的raw文件夹中数据库如何操作？</li>
<li>SQLite文件如何与apk一起打包？</li>
<li>横竖屏切换的生命周期是？</li>
<li>hook技术的理解？</li>
<li>Sax解析的优点？</li>
<li>Intent可以传递哪些数据？</li>
</ul>
<h1 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h1><ul>
<li>如何统计APP被下载的次数？</li>
<li>注册/登录的具体流程是怎么样的？</li>
<li>如何知道用户是否是第一次发开APP？</li>
</ul>
<blockquote>
<p> <strong>作者简介</strong>：</p>
<p> <strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p> <a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p> <strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p> <strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[面试_01]]></title>
      <url>http://yoursite.com/2016/02/24/%E9%9D%A2%E8%AF%95_01/</url>
      <content type="html"><![CDATA[<p>第一次正式面试Android开发工程师<br><a id="more"></a></p>
<ul>
<li>公司：深圳市速影科技有限公司</li>
<li>职位：Android TV应用开发工程师</li>
<li>时间：2016/02/24 10:00</li>
</ul>
<h1 id="笔试"><a href="#笔试" class="headerlink" title="笔试"></a>笔试</h1><ul>
<li>如何避免应用程序弹出ANR提示框？</li>
<li>如何限制APP安装后使用的次数？</li>
<li>多分辨率、国际化，如何实现？</li>
<li>数据缓存怎么实现？</li>
<li>JavaScript可以和Android通信吗？如何实现？</li>
<li>HTML可以和Android通信、交互吗？如何实现？</li>
<li>AIDL的用途是什么？</li>
<li>Application类的作用？</li>
<li>如何结束Activity？结束时调用的生命周期的方法是什么？</li>
</ul>
<h1 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h1><ul>
<li>adb、Linux的常用命令？</li>
<li>如何调试、有没有接触过无线调试？</li>
<li>图片如何缓存、key是什么？</li>
<li>如何开机自动启动app？</li>
<li>如何实现用户自定义控件？</li>
<li>线性布局中的权重是怎么回事？</li>
<li>Application类有没有使用过？你在哪些方面用过？</li>
<li>Service可以弹对话框吗？</li>
<li>两个APP如何通信？具体描述？</li>
<li>极光推送的原理？是服务器主动推送还是APP发送请求？</li>
<li>ShareSDK第三方登录及分享需要注意什么？</li>
<li>如何实现APP的版本更新？具体流程？版本号如何获取？在哪里配置版本号？</li>
<li>内容提供者的用途及使用方式？</li>
<li>你之前公司的服务器返回的数据格式是？json与xml有什么区别?有什么优势及劣势？</li>
</ul>
<blockquote>
<p><strong>作者简介</strong>：</p>
<p><strong>刘广明</strong>(<a href="http://weibo.com/u/1665380350" target="_blank" rel="external">@cnLGMing</a>)，一步一步往上爬。</p>
<p><a href="http://www.liuguangmingcn.com/" target="_blank" rel="external">个人博客</a> 、<a href="https://github.com/cnLGMing" target="_blank" rel="external">GitHub</a> 、<a href="https://www.zhihu.com/people/LGMing" target="_blank" rel="external">知乎</a></p>
<p><strong>文章若有不对之处，欢迎指正，谢谢~</strong></p>
<p><strong>版权声明：原创作品，转载时请务必注明原始出处。</strong></p>
</blockquote>
]]></content>
    </entry>
    
  
  
</search>
